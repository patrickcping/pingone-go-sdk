/*
PingOne Platform API - PingOne MFA

The PingOne Platform API covering the PingOne MFA service

API version: 2021-10-17
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mfa

import (
	"encoding/json"
)

// DeviceAuthenticationPolicy struct for DeviceAuthenticationPolicy
type DeviceAuthenticationPolicy struct {
	Environment *ObjectEnvironment `json:"environment,omitempty"`
	// Device authentication policy's UUID.
	Id *string `json:"id,omitempty"`
	// Device authentication policy's name.
	Name *string `json:"name,omitempty"`
	Sms *DeviceAuthenticationPolicyOfflineDevice `json:"sms,omitempty"`
	Voice *DeviceAuthenticationPolicyOfflineDevice `json:"voice,omitempty"`
	Email *DeviceAuthenticationPolicyOfflineDevice `json:"email,omitempty"`
	Mobile *DeviceAuthenticationPolicyMobile `json:"mobile,omitempty"`
	Totp *DeviceAuthenticationPolicyTotp `json:"totp,omitempty"`
	SecurityKey *DeviceAuthenticationPolicySecurityKey `json:"securityKey,omitempty"`
	Platform *DeviceAuthenticationPolicyPlatform `json:"platform,omitempty"`
	// The default policy for Flow Manager.
	Default *bool `json:"default,omitempty"`
	// Deprecated
	ForSignOnPolicy *bool `json:"forSignOnPolicy,omitempty"`
	// The time the resource was last updated.
	UpdatedAt *string `json:"updatedAt,omitempty"`
}

// NewDeviceAuthenticationPolicy instantiates a new DeviceAuthenticationPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceAuthenticationPolicy() *DeviceAuthenticationPolicy {
	this := DeviceAuthenticationPolicy{}
	return &this
}

// NewDeviceAuthenticationPolicyWithDefaults instantiates a new DeviceAuthenticationPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceAuthenticationPolicyWithDefaults() *DeviceAuthenticationPolicy {
	this := DeviceAuthenticationPolicy{}
	return &this
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicy) GetEnvironment() ObjectEnvironment {
	if o == nil || o.Environment == nil {
		var ret ObjectEnvironment
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicy) GetEnvironmentOk() (*ObjectEnvironment, bool) {
	if o == nil || o.Environment == nil {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicy) HasEnvironment() bool {
	if o != nil && o.Environment != nil {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given ObjectEnvironment and assigns it to the Environment field.
func (o *DeviceAuthenticationPolicy) SetEnvironment(v ObjectEnvironment) {
	o.Environment = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicy) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicy) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicy) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DeviceAuthenticationPolicy) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicy) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicy) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicy) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DeviceAuthenticationPolicy) SetName(v string) {
	o.Name = &v
}

// GetSms returns the Sms field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicy) GetSms() DeviceAuthenticationPolicyOfflineDevice {
	if o == nil || o.Sms == nil {
		var ret DeviceAuthenticationPolicyOfflineDevice
		return ret
	}
	return *o.Sms
}

// GetSmsOk returns a tuple with the Sms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicy) GetSmsOk() (*DeviceAuthenticationPolicyOfflineDevice, bool) {
	if o == nil || o.Sms == nil {
		return nil, false
	}
	return o.Sms, true
}

// HasSms returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicy) HasSms() bool {
	if o != nil && o.Sms != nil {
		return true
	}

	return false
}

// SetSms gets a reference to the given DeviceAuthenticationPolicyOfflineDevice and assigns it to the Sms field.
func (o *DeviceAuthenticationPolicy) SetSms(v DeviceAuthenticationPolicyOfflineDevice) {
	o.Sms = &v
}

// GetVoice returns the Voice field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicy) GetVoice() DeviceAuthenticationPolicyOfflineDevice {
	if o == nil || o.Voice == nil {
		var ret DeviceAuthenticationPolicyOfflineDevice
		return ret
	}
	return *o.Voice
}

// GetVoiceOk returns a tuple with the Voice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicy) GetVoiceOk() (*DeviceAuthenticationPolicyOfflineDevice, bool) {
	if o == nil || o.Voice == nil {
		return nil, false
	}
	return o.Voice, true
}

// HasVoice returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicy) HasVoice() bool {
	if o != nil && o.Voice != nil {
		return true
	}

	return false
}

// SetVoice gets a reference to the given DeviceAuthenticationPolicyOfflineDevice and assigns it to the Voice field.
func (o *DeviceAuthenticationPolicy) SetVoice(v DeviceAuthenticationPolicyOfflineDevice) {
	o.Voice = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicy) GetEmail() DeviceAuthenticationPolicyOfflineDevice {
	if o == nil || o.Email == nil {
		var ret DeviceAuthenticationPolicyOfflineDevice
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicy) GetEmailOk() (*DeviceAuthenticationPolicyOfflineDevice, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicy) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given DeviceAuthenticationPolicyOfflineDevice and assigns it to the Email field.
func (o *DeviceAuthenticationPolicy) SetEmail(v DeviceAuthenticationPolicyOfflineDevice) {
	o.Email = &v
}

// GetMobile returns the Mobile field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicy) GetMobile() DeviceAuthenticationPolicyMobile {
	if o == nil || o.Mobile == nil {
		var ret DeviceAuthenticationPolicyMobile
		return ret
	}
	return *o.Mobile
}

// GetMobileOk returns a tuple with the Mobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicy) GetMobileOk() (*DeviceAuthenticationPolicyMobile, bool) {
	if o == nil || o.Mobile == nil {
		return nil, false
	}
	return o.Mobile, true
}

// HasMobile returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicy) HasMobile() bool {
	if o != nil && o.Mobile != nil {
		return true
	}

	return false
}

// SetMobile gets a reference to the given DeviceAuthenticationPolicyMobile and assigns it to the Mobile field.
func (o *DeviceAuthenticationPolicy) SetMobile(v DeviceAuthenticationPolicyMobile) {
	o.Mobile = &v
}

// GetTotp returns the Totp field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicy) GetTotp() DeviceAuthenticationPolicyTotp {
	if o == nil || o.Totp == nil {
		var ret DeviceAuthenticationPolicyTotp
		return ret
	}
	return *o.Totp
}

// GetTotpOk returns a tuple with the Totp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicy) GetTotpOk() (*DeviceAuthenticationPolicyTotp, bool) {
	if o == nil || o.Totp == nil {
		return nil, false
	}
	return o.Totp, true
}

// HasTotp returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicy) HasTotp() bool {
	if o != nil && o.Totp != nil {
		return true
	}

	return false
}

// SetTotp gets a reference to the given DeviceAuthenticationPolicyTotp and assigns it to the Totp field.
func (o *DeviceAuthenticationPolicy) SetTotp(v DeviceAuthenticationPolicyTotp) {
	o.Totp = &v
}

// GetSecurityKey returns the SecurityKey field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicy) GetSecurityKey() DeviceAuthenticationPolicySecurityKey {
	if o == nil || o.SecurityKey == nil {
		var ret DeviceAuthenticationPolicySecurityKey
		return ret
	}
	return *o.SecurityKey
}

// GetSecurityKeyOk returns a tuple with the SecurityKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicy) GetSecurityKeyOk() (*DeviceAuthenticationPolicySecurityKey, bool) {
	if o == nil || o.SecurityKey == nil {
		return nil, false
	}
	return o.SecurityKey, true
}

// HasSecurityKey returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicy) HasSecurityKey() bool {
	if o != nil && o.SecurityKey != nil {
		return true
	}

	return false
}

// SetSecurityKey gets a reference to the given DeviceAuthenticationPolicySecurityKey and assigns it to the SecurityKey field.
func (o *DeviceAuthenticationPolicy) SetSecurityKey(v DeviceAuthenticationPolicySecurityKey) {
	o.SecurityKey = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicy) GetPlatform() DeviceAuthenticationPolicyPlatform {
	if o == nil || o.Platform == nil {
		var ret DeviceAuthenticationPolicyPlatform
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicy) GetPlatformOk() (*DeviceAuthenticationPolicyPlatform, bool) {
	if o == nil || o.Platform == nil {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicy) HasPlatform() bool {
	if o != nil && o.Platform != nil {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given DeviceAuthenticationPolicyPlatform and assigns it to the Platform field.
func (o *DeviceAuthenticationPolicy) SetPlatform(v DeviceAuthenticationPolicyPlatform) {
	o.Platform = &v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicy) GetDefault() bool {
	if o == nil || o.Default == nil {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicy) GetDefaultOk() (*bool, bool) {
	if o == nil || o.Default == nil {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicy) HasDefault() bool {
	if o != nil && o.Default != nil {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *DeviceAuthenticationPolicy) SetDefault(v bool) {
	o.Default = &v
}

// GetForSignOnPolicy returns the ForSignOnPolicy field value if set, zero value otherwise.
// Deprecated
func (o *DeviceAuthenticationPolicy) GetForSignOnPolicy() bool {
	if o == nil || o.ForSignOnPolicy == nil {
		var ret bool
		return ret
	}
	return *o.ForSignOnPolicy
}

// GetForSignOnPolicyOk returns a tuple with the ForSignOnPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *DeviceAuthenticationPolicy) GetForSignOnPolicyOk() (*bool, bool) {
	if o == nil || o.ForSignOnPolicy == nil {
		return nil, false
	}
	return o.ForSignOnPolicy, true
}

// HasForSignOnPolicy returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicy) HasForSignOnPolicy() bool {
	if o != nil && o.ForSignOnPolicy != nil {
		return true
	}

	return false
}

// SetForSignOnPolicy gets a reference to the given bool and assigns it to the ForSignOnPolicy field.
// Deprecated
func (o *DeviceAuthenticationPolicy) SetForSignOnPolicy(v bool) {
	o.ForSignOnPolicy = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicy) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicy) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicy) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *DeviceAuthenticationPolicy) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o DeviceAuthenticationPolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Environment != nil {
		toSerialize["environment"] = o.Environment
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Sms != nil {
		toSerialize["sms"] = o.Sms
	}
	if o.Voice != nil {
		toSerialize["voice"] = o.Voice
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Mobile != nil {
		toSerialize["mobile"] = o.Mobile
	}
	if o.Totp != nil {
		toSerialize["totp"] = o.Totp
	}
	if o.SecurityKey != nil {
		toSerialize["securityKey"] = o.SecurityKey
	}
	if o.Platform != nil {
		toSerialize["platform"] = o.Platform
	}
	if o.Default != nil {
		toSerialize["default"] = o.Default
	}
	if o.ForSignOnPolicy != nil {
		toSerialize["forSignOnPolicy"] = o.ForSignOnPolicy
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceAuthenticationPolicy struct {
	value *DeviceAuthenticationPolicy
	isSet bool
}

func (v NullableDeviceAuthenticationPolicy) Get() *DeviceAuthenticationPolicy {
	return v.value
}

func (v *NullableDeviceAuthenticationPolicy) Set(val *DeviceAuthenticationPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceAuthenticationPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceAuthenticationPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceAuthenticationPolicy(val *DeviceAuthenticationPolicy) *NullableDeviceAuthenticationPolicy {
	return &NullableDeviceAuthenticationPolicy{value: val, isSet: true}
}

func (v NullableDeviceAuthenticationPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceAuthenticationPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


