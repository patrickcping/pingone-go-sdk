/*
PingOne Platform API - PingOne MFA

The PingOne Platform API covering the PingOne MFA service

API version: 2021-10-17
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mfa

import (
	"encoding/json"
)

// DeviceAuthenticationPolicyPlatform FIDO2 biometrics
type DeviceAuthenticationPolicyPlatform struct {
	// Enabled or disabled in the policy.
	Enabled *bool `json:"enabled,omitempty"`
	// Specifies the FIDO policy UUID. This property can be null. When null, the environment's default FIDO Policy is used.
	FidoPolicyId *string `json:"fidoPolicyId,omitempty"`
}

// NewDeviceAuthenticationPolicyPlatform instantiates a new DeviceAuthenticationPolicyPlatform object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceAuthenticationPolicyPlatform() *DeviceAuthenticationPolicyPlatform {
	this := DeviceAuthenticationPolicyPlatform{}
	return &this
}

// NewDeviceAuthenticationPolicyPlatformWithDefaults instantiates a new DeviceAuthenticationPolicyPlatform object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceAuthenticationPolicyPlatformWithDefaults() *DeviceAuthenticationPolicyPlatform {
	this := DeviceAuthenticationPolicyPlatform{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicyPlatform) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPlatform) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicyPlatform) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *DeviceAuthenticationPolicyPlatform) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetFidoPolicyId returns the FidoPolicyId field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicyPlatform) GetFidoPolicyId() string {
	if o == nil || o.FidoPolicyId == nil {
		var ret string
		return ret
	}
	return *o.FidoPolicyId
}

// GetFidoPolicyIdOk returns a tuple with the FidoPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyPlatform) GetFidoPolicyIdOk() (*string, bool) {
	if o == nil || o.FidoPolicyId == nil {
		return nil, false
	}
	return o.FidoPolicyId, true
}

// HasFidoPolicyId returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicyPlatform) HasFidoPolicyId() bool {
	if o != nil && o.FidoPolicyId != nil {
		return true
	}

	return false
}

// SetFidoPolicyId gets a reference to the given string and assigns it to the FidoPolicyId field.
func (o *DeviceAuthenticationPolicyPlatform) SetFidoPolicyId(v string) {
	o.FidoPolicyId = &v
}

func (o DeviceAuthenticationPolicyPlatform) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.FidoPolicyId != nil {
		toSerialize["fidoPolicyId"] = o.FidoPolicyId
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceAuthenticationPolicyPlatform struct {
	value *DeviceAuthenticationPolicyPlatform
	isSet bool
}

func (v NullableDeviceAuthenticationPolicyPlatform) Get() *DeviceAuthenticationPolicyPlatform {
	return v.value
}

func (v *NullableDeviceAuthenticationPolicyPlatform) Set(val *DeviceAuthenticationPolicyPlatform) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceAuthenticationPolicyPlatform) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceAuthenticationPolicyPlatform) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceAuthenticationPolicyPlatform(val *DeviceAuthenticationPolicyPlatform) *NullableDeviceAuthenticationPolicyPlatform {
	return &NullableDeviceAuthenticationPolicyPlatform{value: val, isSet: true}
}

func (v NullableDeviceAuthenticationPolicyPlatform) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceAuthenticationPolicyPlatform) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


