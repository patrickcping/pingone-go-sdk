openapi: 3.0.0
info:
  description: The PingOne Platform API covering the PingOne MFA service
  title: PingOne Platform API - PingOne MFA
  version: 2021-10-17
externalDocs:
  description: PingOne Platform API Reference - PingOne MFA APIs
  url: https://apidocs.pingidentity.com/pingone/platform/v1/api/#pingone-mfa
servers:
- description: PingOne Platform API Endpoint
  url: "https://api.pingone.{suffix}"
  variables:
    suffix:
      default: eu
      enum:
      - eu
      - com
      - asia
      - ca
security:
- bearer: []
tags:
- name: FIDO Device
- name: Device Authentication Policy
- name: FIDO Policy
- name: MFA Settings
- name: User MFA Devices
- name: User MFA Devices > FIDO2 Biometrics Devices
- name: Enable Users MFA
- name: User MFA Pairing Keys
paths:
  /v1/environments/{environmentID}/applications/{applicationID}/pushCredentials:
    get:
      operationId: readAllMFAPushCredentials
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityArray'
          description: Successful response
      summary: READ All MFA Push Credentials
      tags:
      - Applications > Application MFA Push Credentials
    post:
      operationId: createMFAPushCredential
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createMFAPushCredential_request'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAPushCredentialResponse'
          description: Successful response
      summary: CREATE MFA Push Credential
      tags:
      - Applications > Application MFA Push Credentials
  /v1/environments/{environmentID}/applications/{applicationID}/pushCredentials/{pushCredentialID}:
    delete:
      operationId: deleteMFAPushCredential
      parameters:
      - example: "Bearer {{accessToken}}"
        explode: false
        in: header
        name: Authorization
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pushCredentialID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "204":
          description: Successful response
      summary: DELETE MFA Push Credential
      tags:
      - Applications > Application MFA Push Credentials
    get:
      operationId: readOneMFAPushCredential
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pushCredentialID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAPushCredentialResponse'
          description: Successful response
      summary: READ One MFA Push Credential
      tags:
      - Applications > Application MFA Push Credentials
    put:
      operationId: updateMFAPushCredential
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pushCredentialID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateMFAPushCredential_request'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAPushCredentialResponse'
          description: Successful response
      summary: UPDATE MFA Push Credential
      tags:
      - Applications > Application MFA Push Credentials
  /v1/environments/{environmentID}/deviceAuthenticationPolicies:
    get:
      operationId: readDeviceAuthenticationPolicies
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityArray'
          description: Successful response
      summary: READ Device Authentication Policies
      tags:
      - Device Authentication Policy
    post:
      operationId: createDeviceAuthenticationPolicies
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceAuthenticationPolicy'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAuthenticationPolicy'
          description: Successful response
      summary: CREATE Device Authentication Policy
      tags:
      - Device Authentication Policy
  /v1/environments/{environmentID}/deviceAuthenticationPolicies/{deviceAuthenticationPolicyID}:
    delete:
      operationId: deleteDeviceAuthenticationPolicy
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deviceAuthenticationPolicyID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "204":
          description: Successful response
      summary: DELETE Device Authentication Policy
      tags:
      - Device Authentication Policy
    get:
      operationId: readOneDeviceAuthenticationPolicy
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deviceAuthenticationPolicyID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAuthenticationPolicy'
          description: Successful response
      summary: READ One Device Authentication Policy
      tags:
      - Device Authentication Policy
    put:
      operationId: updateDeviceAuthenticationPolicy
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deviceAuthenticationPolicyID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceAuthenticationPolicy'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAuthenticationPolicy'
          description: Successful response
      summary: UPDATE Device Authentication Policy
      tags:
      - Device Authentication Policy
  /v1/environments/{environmentID}/fidoDevicesMetadata:
    get:
      operationId: readFidoDevices
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityArray'
          description: Successful response
      summary: READ All FIDO Devices
      tags:
      - FIDO Device
    post:
      operationId: createFidoDevice
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FIDOCustomDeviceMetadata'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FIDODevice'
          description: Successful response
      summary: CREATE FIDO Device
      tags:
      - FIDO Device
  /v1/environments/{environmentID}/fidoDevicesMetadata/{fidoDeviceID}:
    delete:
      operationId: deleteFidoDevice
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fidoDeviceID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "204":
          description: Successful response
      summary: DELETE FIDO Device
      tags:
      - FIDO Device
    get:
      operationId: readOneFidoDevice
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fidoDeviceID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FIDODevice'
          description: Successful response
      summary: READ One FIDO Device
      tags:
      - FIDO Device
  /v1/environments/{environmentID}/fidoPolicies:
    get:
      operationId: readFidoPolicies
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityArray'
          description: Successful response
      summary: READ FIDO Policies
      tags:
      - FIDO Policy
    post:
      operationId: createFidoPolicy
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FIDOPolicy'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FIDOPolicy'
          description: Successful response
      summary: CREATE FIDO Policy
      tags:
      - FIDO Policy
  /v1/environments/{environmentID}/fidoPolicies/{fidoPolicyID}:
    delete:
      operationId: deleteFidoPolicy
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fidoPolicyID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "204":
          description: Successful response
      summary: DELETE FIDO Policy
      tags:
      - FIDO Policy
    get:
      operationId: readOneFidoPolicy
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fidoPolicyID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FIDOPolicy'
          description: Successful response
      summary: READ One FIDO Policy
      tags:
      - FIDO Policy
    put:
      operationId: updateFIDOPolicy
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fidoPolicyID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FIDOPolicy'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FIDOPolicy'
          description: Successful response
      summary: UPDATE FIDO Policy
      tags:
      - FIDO Policy
  /v1/environments/{environmentID}/mfaSettings:
    delete:
      operationId: resetMFASettings
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFASettings'
          description: Successful response
      summary: RESET MFA Settings
      tags:
      - MFA Settings
    get:
      operationId: readMFASettings
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFASettings'
          description: Successful response
      summary: READ MFA Settings
      tags:
      - MFA Settings
    put:
      operationId: updateMFASettings
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFASettings'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFASettings'
          description: Successful response
      summary: UPDATE MFA Settings
      tags:
      - MFA Settings
  /v1/environments/{environmentID}/users/{userID}/devices:
    delete:
      parameters:
      - example: application/vnd.pingidentity.devices.order.remove+json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "204":
          description: Successful response
      summary: DELETE Device Order
      tags:
      - User MFA Devices
    get:
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "200":
          content:
            application/json: {}
          description: Successful response
      summary: READ All MFA User Devices
      tags:
      - User MFA Devices
    post:
      parameters:
      - example: application/vnd.pingidentity.devices.reorder+json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              example:
                order:
                - id: "{{deviceID}}"
                - id: "{{deviceID2}}"
                - id: "{{deviceID3}}"
                - id: "{{deviceID4}}"
                - id: "{{deviceID5}}"
              type: object
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "200":
          content:
            application/json: {}
          description: Successful response
      summary: SET Device Order
      tags:
      - User MFA Devices
  /v1/environments/{environmentID}/users/{userID}/devices/{deviceID}:
    delete:
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deviceID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "204":
          description: Successful response
      summary: DELETE MFA User Device
      tags:
      - User MFA Devices
    get:
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deviceID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "200":
          content:
            application/json: {}
          description: Successful response
      summary: READ One MFA User Device
      tags:
      - User MFA Devices
    post:
      parameters:
      - example: application/vnd.pingidentity.device.activate+json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deviceID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              example:
                otp: xxxxxx
              type: object
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "200":
          content:
            application/json: {}
          description: Successful response
      summary: ACTIVATE MFA User Device
      tags:
      - User MFA Devices
  /v1/environments/{environmentID}/users/{userID}/devices/{deviceID}/nickname:
    put:
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deviceID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              example:
                nickname: My phone
              type: object
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "200":
          content:
            application/json: {}
          description: Successful response
      summary: UPDATE Device Nickname
      tags:
      - User MFA Devices
  /v1/environments/{environmentID}/users/{userID}/devices/{deviceID}/logs:
    put:
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deviceID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              example:
                status: PENDING
              type: object
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "200":
          content:
            application/json: {}
          description: Successful response
      summary: SEND MFA Device Logs
      tags:
      - User MFA Devices
  /v1/environments/{environmentID}/users/{userID}/mfaEnabled:
    get:
      operationId: readUserMFAEnabled
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMFAEnabled'
          description: Successful response
      summary: READ User MFA Enabled
      tags:
      - Enable Users MFA
    put:
      operationId: updateUserMFAEnabled
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserMFAEnabled'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMFAEnabled'
          description: Successful response
      summary: UPDATE User MFA Enabled
      tags:
      - Enable Users MFA
  /v1/environments/{environmentID}/users/{userID}/pairingKeys/{pairingKeyID}:
    delete:
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pairingKeyID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "204":
          description: Successful response
      summary: DELETE MFA Pairing Key
      tags:
      - User MFA Pairing Keys
    get:
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pairingKeyID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "200":
          content:
            application/json: {}
          description: Successful response
      summary: READ One MFA Pairing Key
      tags:
      - User MFA Pairing Keys
  /v1/environments/{environmentID}/users/{userID}/pairingKeys:
    post:
      parameters:
      - explode: false
        in: path
        name: environmentID
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              example:
                applications:
                - id: "{{applicationID}}"
              type: object
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request failed due to authorization issue.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Not found.
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: "Invalid request received.  Malformed JSON, malformed HTTP\
            \ request."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Request was rate limited
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
          description: Uncaught error occurred.  Platform outage
        "201":
          content:
            application/json: {}
          description: Successful response
      summary: CREATE MFA Pairing Key
      tags:
      - User MFA Pairing Keys
components:
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/P1Error'
      description: "Invalid request received.  Malformed JSON, malformed HTTP request."
    "401":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/P1Error'
      description: Request failed due to authorization issue.
    "403":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/P1Error'
      description: Request failed due to authorization issue.
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/P1Error'
      description: Not found.
    "405":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/P1Error'
      description: "Invalid request received.  Malformed JSON, malformed HTTP request."
    "429":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/P1Error'
      description: Request was rate limited
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/P1Error'
      description: Uncaught error occurred.  Platform outage
  schemas:
    DeviceAuthenticationPolicyFIDODevice:
      example:
        enabled: true
        fidoPolicyId: fidoPolicyId
      properties:
        enabled:
          description: Enabled or disabled in the policy.
          type: boolean
        fidoPolicyId:
          description: "Specifies the FIDO policy UUID. This property can be null.\
            \ When null, the environment's default FIDO Policy is used."
          type: string
      required:
      - enabled
      type: object
    DeviceAuthenticationPolicyOfflineDevice:
      example:
        otp:
          failure:
            count: 6
            coolDown:
              duration: 1
              timeUnit: null
          lifeTime:
            duration: 0
            timeUnit: null
        enabled: true
      properties:
        enabled:
          description: Enabled or disabled in the policy.
          type: boolean
        otp:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyOfflineDevice_otp'
      required:
      - enabled
      - otp
      type: object
    DeviceAuthenticationPolicy:
      example:
        voice:
          otp:
            failure:
              count: 6
              coolDown:
                duration: 1
                timeUnit: null
            lifeTime:
              duration: 0
              timeUnit: null
          enabled: true
        totp:
          otp:
            failure:
              count: 6
              coolDown:
                duration: 1
                timeUnit: null
          enabled: true
        mobile:
          otp:
            failure:
              count: 6
              coolDown:
                duration: 1
                timeUnit: null
            window:
              stepSize:
                duration: 5
                timeUnit: null
          enabled: true
          applications:
          - autoEnrollment:
              enabled: true
            deviceAuthorization:
              extraVerification: null
              enabled: true
            pairingKeyLifetime:
              duration: 2
              timeUnit: null
            integrityDetection: null
            pushTimeout:
              duration: 102
              timeUnit: null
            otp:
              enabled: true
            id: id
            push:
              enabled: true
            pushLimit:
              lockDuration:
                duration: 9
                timeUnit: null
              count: 35
              timePeriod:
                duration: 3
                timeUnit: null
          - autoEnrollment:
              enabled: true
            deviceAuthorization:
              extraVerification: null
              enabled: true
            pairingKeyLifetime:
              duration: 2
              timeUnit: null
            integrityDetection: null
            pushTimeout:
              duration: 102
              timeUnit: null
            otp:
              enabled: true
            id: id
            push:
              enabled: true
            pushLimit:
              lockDuration:
                duration: 9
                timeUnit: null
              count: 35
              timePeriod:
                duration: 3
                timeUnit: null
        platform:
          enabled: true
          fidoPolicyId: fidoPolicyId
        forSignOnPolicy: true
        environment:
          id: id
        default: true
        name: name
        sms:
          otp:
            failure:
              count: 6
              coolDown:
                duration: 1
                timeUnit: null
            lifeTime:
              duration: 0
              timeUnit: null
          enabled: true
        id: id
        securityKey:
          enabled: true
          fidoPolicyId: fidoPolicyId
        email:
          otp:
            failure:
              count: 6
              coolDown:
                duration: 1
                timeUnit: null
            lifeTime:
              duration: 0
              timeUnit: null
          enabled: true
        authentication:
          deviceSelection: null
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        environment:
          $ref: '#/components/schemas/ObjectEnvironment'
        id:
          description: Device authentication policy's UUID.
          readOnly: true
          type: string
        name:
          description: Device authentication policy's name.
          type: string
        authentication:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_authentication'
        sms:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyOfflineDevice'
        voice:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyOfflineDevice'
        email:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyOfflineDevice'
        mobile:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile'
        totp:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_totp'
        securityKey:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyFIDODevice'
        platform:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyFIDODevice'
        default:
          description: The default policy for Flow Manager.
          type: boolean
        forSignOnPolicy:
          deprecated: true
          type: boolean
        updatedAt:
          description: The time the resource was last updated.
          format: date-time
          readOnly: true
          type: string
      required:
      - default
      - email
      - forSignOnPolicy
      - mobile
      - name
      - platform
      - securityKey
      - sms
      - totp
      - voice
      type: object
    EntityArray:
      example:
        size: 4.145608029883936
        _embedded:
          fidoDevicesMetadata:
          - null
          - null
          pushCredentials:
          - null
          - null
          fidoPolicies:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            environment:
              id: id
            default: true
            _embedded: "{}"
            name: name
            description: description
            attestationRequirements: null
            enforceDuringAuthentication: false
            id: id
            allowedAuthenticators:
            - id: id
            - id: id
            updatedAt: 2000-01-23T04:56:07.000+00:00
            residentKeyRequirement: null
          - createdAt: 2000-01-23T04:56:07.000+00:00
            environment:
              id: id
            default: true
            _embedded: "{}"
            name: name
            description: description
            attestationRequirements: null
            enforceDuringAuthentication: false
            id: id
            allowedAuthenticators:
            - id: id
            - id: id
            updatedAt: 2000-01-23T04:56:07.000+00:00
            residentKeyRequirement: null
          deviceAuthenticationPolicies:
          - voice:
              otp:
                failure:
                  count: 6
                  coolDown:
                    duration: 1
                    timeUnit: null
                lifeTime:
                  duration: 0
                  timeUnit: null
              enabled: true
            totp:
              otp:
                failure:
                  count: 6
                  coolDown:
                    duration: 1
                    timeUnit: null
              enabled: true
            mobile:
              otp:
                failure:
                  count: 6
                  coolDown:
                    duration: 1
                    timeUnit: null
                window:
                  stepSize:
                    duration: 5
                    timeUnit: null
              enabled: true
              applications:
              - autoEnrollment:
                  enabled: true
                deviceAuthorization:
                  extraVerification: null
                  enabled: true
                pairingKeyLifetime:
                  duration: 2
                  timeUnit: null
                integrityDetection: null
                pushTimeout:
                  duration: 102
                  timeUnit: null
                otp:
                  enabled: true
                id: id
                push:
                  enabled: true
                pushLimit:
                  lockDuration:
                    duration: 9
                    timeUnit: null
                  count: 35
                  timePeriod:
                    duration: 3
                    timeUnit: null
              - autoEnrollment:
                  enabled: true
                deviceAuthorization:
                  extraVerification: null
                  enabled: true
                pairingKeyLifetime:
                  duration: 2
                  timeUnit: null
                integrityDetection: null
                pushTimeout:
                  duration: 102
                  timeUnit: null
                otp:
                  enabled: true
                id: id
                push:
                  enabled: true
                pushLimit:
                  lockDuration:
                    duration: 9
                    timeUnit: null
                  count: 35
                  timePeriod:
                    duration: 3
                    timeUnit: null
            platform:
              enabled: true
              fidoPolicyId: fidoPolicyId
            forSignOnPolicy: true
            environment:
              id: id
            default: true
            name: name
            sms:
              otp:
                failure:
                  count: 6
                  coolDown:
                    duration: 1
                    timeUnit: null
                lifeTime:
                  duration: 0
                  timeUnit: null
              enabled: true
            id: id
            securityKey:
              enabled: true
              fidoPolicyId: fidoPolicyId
            email:
              otp:
                failure:
                  count: 6
                  coolDown:
                    duration: 1
                    timeUnit: null
                lifeTime:
                  duration: 0
                  timeUnit: null
              enabled: true
            authentication:
              deviceSelection: null
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - voice:
              otp:
                failure:
                  count: 6
                  coolDown:
                    duration: 1
                    timeUnit: null
                lifeTime:
                  duration: 0
                  timeUnit: null
              enabled: true
            totp:
              otp:
                failure:
                  count: 6
                  coolDown:
                    duration: 1
                    timeUnit: null
              enabled: true
            mobile:
              otp:
                failure:
                  count: 6
                  coolDown:
                    duration: 1
                    timeUnit: null
                window:
                  stepSize:
                    duration: 5
                    timeUnit: null
              enabled: true
              applications:
              - autoEnrollment:
                  enabled: true
                deviceAuthorization:
                  extraVerification: null
                  enabled: true
                pairingKeyLifetime:
                  duration: 2
                  timeUnit: null
                integrityDetection: null
                pushTimeout:
                  duration: 102
                  timeUnit: null
                otp:
                  enabled: true
                id: id
                push:
                  enabled: true
                pushLimit:
                  lockDuration:
                    duration: 9
                    timeUnit: null
                  count: 35
                  timePeriod:
                    duration: 3
                    timeUnit: null
              - autoEnrollment:
                  enabled: true
                deviceAuthorization:
                  extraVerification: null
                  enabled: true
                pairingKeyLifetime:
                  duration: 2
                  timeUnit: null
                integrityDetection: null
                pushTimeout:
                  duration: 102
                  timeUnit: null
                otp:
                  enabled: true
                id: id
                push:
                  enabled: true
                pushLimit:
                  lockDuration:
                    duration: 9
                    timeUnit: null
                  count: 35
                  timePeriod:
                    duration: 3
                    timeUnit: null
            platform:
              enabled: true
              fidoPolicyId: fidoPolicyId
            forSignOnPolicy: true
            environment:
              id: id
            default: true
            name: name
            sms:
              otp:
                failure:
                  count: 6
                  coolDown:
                    duration: 1
                    timeUnit: null
                lifeTime:
                  duration: 0
                  timeUnit: null
              enabled: true
            id: id
            securityKey:
              enabled: true
              fidoPolicyId: fidoPolicyId
            email:
              otp:
                failure:
                  count: 6
                  coolDown:
                    duration: 1
                    timeUnit: null
                lifeTime:
                  duration: 0
                  timeUnit: null
              enabled: true
            authentication:
              deviceSelection: null
            updatedAt: 2000-01-23T04:56:07.000+00:00
        count: 2.027123023002322
      properties:
        _embedded:
          $ref: '#/components/schemas/EntityArray__embedded'
        count:
          type: number
        size:
          type: number
      type: object
    EnumFIDOAttestationRequirements:
      description: |
        Determines whether attestation is requested from the authenticator, and whether this information is used to restrict authenticator usage. Can take one of these values:
        `NONE` - attestation is not requested
        `AUDIT_ONLY` - Attestation is requested and the information is used for logging purposes, but the information is not used for filtering authenticators
        `GLOBAL` - all entries in the MDS table can be used for authentication
        `CERTIFIED` - only FIDO-certified authenticators can be used
        `SPECIFIC` - only specific authenticators can be used. Used in conjunction with `allowedAuthenticators`.
      enum:
      - NONE
      - AUDIT_ONLY
      - GLOBAL
      - CERTIFIED
      - SPECIFIC
      type: string
    EnumFIDOResidentKeyRequirement:
      description: Used to enable resident keys. Value can be `DISCOURAGED` or `REQUIRED`.
      enum:
      - DISCOURAGED
      - REQUIRED
      type: string
    EnumMFADevicePolicyMobileExtraVerification:
      description: "Specifies the level of further verification when deviceAuthorization\
        \ is enabled. The PingOne platform performs an extra verification check by\
        \ sending a “silent” push notification to the customer native application,\
        \ and receives a confirmation in return."
      enum:
      - permissive
      - restrictive
      type: string
    EnumMFADevicePolicyMobileIntegrityDetection:
      description: Controls how authentication or registration attempts should proceed
        if a device integrity check does not receive a response. Set the value to
        `permissive` if you want to allow the process to continue. Set the value to
        `restrictive` if you want to block the user in such situations.
      enum:
      - permissive
      - restrictive
      type: string
    EnumMFADevicePolicySelection:
      description: |
        The default method that should be used for authentication. Can take one of the following values:
        * `DEFAULT_TO_FIRST` - use the method that the user set as their default
        * `PROMPT_TO_SELECT` - always have the user select the method to use if there is more than one method available
        * `ALWAYS_PROMPT_TO_SELECT` - always have the user select the method to use even if there is only one method available
        If this parameter is not provided, the `DEFAULT_TO_FIRST` option is used.
      enum:
      - DEFAULT_TO_FIRST
      - PROMPT_TO_SELECT
      - ALWAYS_PROMPT_TO_SELECT
      type: string
    EnumMFAPushCredentialAttrType:
      description: |
        Specifies the push credential type.
        Valid values:
        * APNS (for Apple)
        * FCM (for Google)
        * HMS (for Huawei)
      enum:
      - APNS
      - FCM
      - HMS
      type: string
    EnumMFASettingsDeviceSelection:
      deprecated: true
      description: A string that defines the device selection method. Options are
        DEFAULT_TO_FIRST (this is the default setting) and PROMPT_TO_SELECT.
      enum:
      - DEFAULT_TO_FIRST
      - PROMPT_TO_SELECT
      type: string
    EnumMFASettingsPairingKeyFormat:
      description: String that controls the type of pairing key issued. The valid
        values are NUMERIC (12-digit key) and ALPHANUMERIC (16-character alphanumeric
        key).
      enum:
      - NUMERIC
      - ALPHANUMERIC
      type: string
    EnumTimeUnit:
      description: The type of time unit
      enum:
      - MINUTES
      - SECONDS
      type: string
    EnumTimeUnitPushTimeout:
      description: "The time unit for the `pushTimeout.duration` parameter. Currently,\
        \ the only permitted value is `SECONDS`."
      enum:
      - SECONDS
      type: string
    FIDOCustomDeviceMetadata:
      type: object
    FIDODevice:
      type: object
    FIDOPolicy:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        environment:
          id: id
        default: true
        _embedded: "{}"
        name: name
        description: description
        attestationRequirements: null
        enforceDuringAuthentication: false
        id: id
        allowedAuthenticators:
        - id: id
        - id: id
        updatedAt: 2000-01-23T04:56:07.000+00:00
        residentKeyRequirement: null
      properties:
        id:
          description: FIDO policy's UUID.
          readOnly: true
          type: string
        createdAt:
          description: The time the resource was created.
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          description: The time the resource was last updated.
          format: date-time
          readOnly: true
          type: string
        _embedded:
          type: object
        environment:
          $ref: '#/components/schemas/ObjectEnvironment'
        name:
          description: The name to use for the FIDO policy.
          type: string
        description:
          description: Description of the FIDO policy.
          type: string
        attestationRequirements:
          $ref: '#/components/schemas/EnumFIDOAttestationRequirements'
        allowedAuthenticators:
          description: "If `attestationRequirements` is set to `SPECIFIC`, this array\
            \ is used to specify the authenticators that you want to allow."
          items:
            $ref: '#/components/schemas/FIDOPolicy_allowedAuthenticators_inner'
          type: array
        enforceDuringAuthentication:
          default: false
          description: "This parameter is relevant only if you have set `attestationRequirements`\
            \ to `SPECIFIC` in order to restrict usage to only certain authenticators.\
            \ If set to `true`, the policy will be applied both during registration\
            \ and during each authentication attempt. If set to `false`, the policy\
            \ is applied only during registration. Default is `false`."
          type: boolean
        default:
          description: Whether this policy should serve as the default FIDO policy.
          type: boolean
        residentKeyRequirement:
          $ref: '#/components/schemas/EnumFIDOResidentKeyRequirement'
      required:
      - attestationRequirements
      - name
      - residentKeyRequirement
      type: object
    MFAPushCredential:
      properties:
        type:
          $ref: '#/components/schemas/EnumMFAPushCredentialAttrType'
      required:
      - type
      type: object
    MFAPushCredentialAPNS:
      allOf:
      - $ref: '#/components/schemas/MFAPushCredential'
      - $ref: '#/components/schemas/MFAPushCredentialAPNS_allOf'
    MFAPushCredentialFCM:
      allOf:
      - $ref: '#/components/schemas/MFAPushCredential'
      - $ref: '#/components/schemas/MFAPushCredentialFCM_allOf'
    MFAPushCredentialHMS:
      allOf:
      - $ref: '#/components/schemas/MFAPushCredential'
      - $ref: '#/components/schemas/MFAPushCredentialHMS_allOf'
    MFAPushCredentialResponse:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        id: id
        type: null
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: A string that specifies the push credential ID.
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/EnumMFAPushCredentialAttrType'
        createdAt:
          description: The time the resource was created.
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          description: The time the resource was last updated.
          format: date-time
          readOnly: true
          type: string
      type: object
    MFASettings:
      example:
        environment:
          id: id
        phoneExtensions:
          enabled: true
        lockout:
          durationSeconds: 6
          failureCount: 0
        pairing:
          pairingKeyFormat: null
          maxAllowedDevices: 2
        authentication:
          deviceSelection: null
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        environment:
          $ref: '#/components/schemas/ObjectEnvironment'
        authentication:
          $ref: '#/components/schemas/MFASettings_authentication'
        lockout:
          $ref: '#/components/schemas/MFASettings_lockout'
        pairing:
          $ref: '#/components/schemas/MFASettings_pairing'
        phoneExtensions:
          $ref: '#/components/schemas/MFASettings_phoneExtensions'
        updatedAt:
          description: The time the resource was last updated.
          format: date-time
          readOnly: true
          type: string
      required:
      - pairing
      type: object
    ObjectEnvironment:
      example:
        id: id
      properties:
        id:
          description: A string that specifies the environment associated with the
            object.
          readOnly: true
          type: string
      readOnly: true
      type: object
    P1Error:
      properties:
        id:
          description: "A unique identifier that is stored in log files and always\
            \ included in an error response. This value can be used to track the error\
            \ received by the client, with server-side activity included for troubleshooting\
            \ purposes."
          type: string
        code:
          description: A general fault code which the client must handle to provide
            all exception handling routines and to localize messages for users. This
            code is common across all PingOne services and is human readable (such
            as a defined constant rather than a number).
          type: string
        message:
          description: A short description of the error. This message is intended
            to assist with debugging and is returned in English only.
          type: string
        details:
          description: Additional details about the error. Optional information to
            help resolve the error and to display to users.
          items:
            $ref: '#/components/schemas/P1Error_details_inner'
          type: array
      type: object
    UserMFAEnabled:
      example:
        mfaEnabled: true
      properties:
        mfaEnabled:
          description: Whether multi-factor authentication is enabled. This attribute
            is set to `false` by default when the user is created.
          type: boolean
      required:
      - mfaEnabled
      type: object
    createMFAPushCredential_request:
      example:
        type: FCM
        key: key.value
      oneOf:
      - $ref: '#/components/schemas/MFAPushCredentialAPNS'
      - $ref: '#/components/schemas/MFAPushCredentialFCM'
      - $ref: '#/components/schemas/MFAPushCredentialHMS'
    updateMFAPushCredential_request:
      example:
        type: APNS
        key: key.value.updated
        teamId: team.id.updated
        token: |-
          -----BEGIN PRIVATE KEY-----
          MIGTAgEA****7HUikGZU
          -----END PRIVATE KEY-----
      oneOf:
      - $ref: '#/components/schemas/MFAPushCredentialAPNS'
      - $ref: '#/components/schemas/MFAPushCredentialFCM'
      - $ref: '#/components/schemas/MFAPushCredentialHMS'
    DeviceAuthenticationPolicyOfflineDevice_otp_lifeTime:
      example:
        duration: 0
        timeUnit: null
      properties:
        duration:
          description: The duration (number of time units) that the passcode is valid
            before it expires.
          type: integer
        timeUnit:
          $ref: '#/components/schemas/EnumTimeUnit'
      required:
      - duration
      - timeUnit
      type: object
    DeviceAuthenticationPolicyOfflineDevice_otp_failure_coolDown:
      example:
        duration: 1
        timeUnit: null
      properties:
        duration:
          description: The duration (number of time units) the user is blocked after
            reaching the maximum number of passcode failures.
          type: integer
        timeUnit:
          $ref: '#/components/schemas/EnumTimeUnit'
      required:
      - duration
      - timeUnit
      type: object
    DeviceAuthenticationPolicyOfflineDevice_otp_failure:
      example:
        count: 6
        coolDown:
          duration: 1
          timeUnit: null
      properties:
        count:
          description: "The maximum number of times that the OTP entry can fail for\
            \ a user, before they are blocked."
          type: integer
        coolDown:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyOfflineDevice_otp_failure_coolDown'
      required:
      - coolDown
      - count
      type: object
    DeviceAuthenticationPolicyOfflineDevice_otp:
      example:
        failure:
          count: 6
          coolDown:
            duration: 1
            timeUnit: null
        lifeTime:
          duration: 0
          timeUnit: null
      properties:
        lifeTime:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyOfflineDevice_otp_lifeTime'
        failure:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyOfflineDevice_otp_failure'
      required:
      - failure
      - lifeTime
      type: object
    DeviceAuthenticationPolicy_authentication:
      description: An object that contains the device selection settings.
      example:
        deviceSelection: null
      properties:
        deviceSelection:
          $ref: '#/components/schemas/EnumMFADevicePolicySelection'
      required:
      - deviceSelection
      type: object
    DeviceAuthenticationPolicy_mobile_otp_window_stepSize:
      example:
        duration: 5
        timeUnit: null
      properties:
        duration:
          type: integer
        timeUnit:
          $ref: '#/components/schemas/EnumTimeUnit'
      required:
      - duration
      - timeUnit
      type: object
    DeviceAuthenticationPolicy_mobile_otp_window:
      example:
        stepSize:
          duration: 5
          timeUnit: null
      properties:
        stepSize:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_otp_window_stepSize'
      required:
      - stepSize
      type: object
    DeviceAuthenticationPolicy_mobile_otp:
      example:
        failure:
          count: 6
          coolDown:
            duration: 1
            timeUnit: null
        window:
          stepSize:
            duration: 5
            timeUnit: null
      properties:
        failure:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyOfflineDevice_otp_failure'
        window:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_otp_window'
      required:
      - failure
      - window
      type: object
    DeviceAuthenticationPolicy_mobile_applications_inner_push:
      example:
        enabled: true
      properties:
        enabled:
          description: Specifies whether push notification is enabled or disabled
            for the policy.
          type: boolean
      required:
      - enabled
      type: object
    DeviceAuthenticationPolicy_mobile_applications_inner_pushTimeout:
      example:
        duration: 102
        timeUnit: null
      properties:
        duration:
          default: 40
          description: "The amount of time a user has to respond to a push notification\
            \ before it expires. Minimum is 40 seconds and maximum is 150 seconds.\
            \ If this parameter is not provided, the duration is set to 40 seconds."
          maximum: 150
          minimum: 40
          type: integer
        timeUnit:
          $ref: '#/components/schemas/EnumTimeUnitPushTimeout'
      required:
      - duration
      - timeUnit
      type: object
    DeviceAuthenticationPolicy_mobile_applications_inner_pairingKeyLifetime:
      example:
        duration: 2
        timeUnit: null
      properties:
        duration:
          default: 10
          description: "The amount of time an issued pairing key can be used until\
            \ it expires. Minimum is 1 minute and maximum is 48 hours. If this parameter\
            \ is not provided, the duration is set to 10 minutes."
          type: integer
        timeUnit:
          $ref: '#/components/schemas/EnumTimeUnit'
      required:
      - duration
      - timeUnit
      type: object
    DeviceAuthenticationPolicy_mobile_applications_inner_pushLimit_lockDuration:
      example:
        duration: 9
        timeUnit: null
      properties:
        duration:
          default: 30
          description: "The length of time that push notifications should be blocked\
            \ for the application if the defined limit has been reached. The minimum\
            \ value is 1 minute and the maximum value is 120 minutes. If this parameter\
            \ is not provided, the default value is 30 minutes."
          type: integer
        timeUnit:
          $ref: '#/components/schemas/EnumTimeUnit'
      required:
      - duration
      - timeUnit
      type: object
    DeviceAuthenticationPolicy_mobile_applications_inner_pushLimit_timePeriod:
      example:
        duration: 3
        timeUnit: null
      properties:
        duration:
          default: 10
          description: "The time period in which the push notifications are counted\
            \ towards the defined limit. The minimum value is 1 minute and the maximum\
            \ value is 120 minutes. If this parameter is not provided, the default\
            \ value is 10 minutes."
          type: integer
        timeUnit:
          $ref: '#/components/schemas/EnumTimeUnit'
      required:
      - duration
      - timeUnit
      type: object
    DeviceAuthenticationPolicy_mobile_applications_inner_pushLimit:
      example:
        lockDuration:
          duration: 9
          timeUnit: null
        count: 35
        timePeriod:
          duration: 3
          timeUnit: null
      properties:
        count:
          default: 5
          description: "The number of consecutive push notifications that can be ignored\
            \ or rejected by a user within a defined period before push notifications\
            \ are blocked for the application. The minimum value is 1 and the maximum\
            \ value is 50. If this parameter is not provided, the default value is\
            \ 5."
          maximum: 50
          minimum: 1
          type: integer
        lockDuration:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_applications_inner_pushLimit_lockDuration'
        timePeriod:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_applications_inner_pushLimit_timePeriod'
      type: object
    DeviceAuthenticationPolicy_mobile_applications_inner_otp:
      example:
        enabled: true
      properties:
        enabled:
          description: Specifies whether OTP authentication is enabled or disabled
            for the policy.
          type: boolean
      required:
      - enabled
      type: object
    DeviceAuthenticationPolicy_mobile_applications_inner_deviceAuthorization:
      example:
        extraVerification: null
        enabled: true
      properties:
        enabled:
          description: "Specifies the enabled or disabled state of automatic MFA for\
            \ native devices paired with the user, for the specified application."
          type: boolean
        extraVerification:
          $ref: '#/components/schemas/EnumMFADevicePolicyMobileExtraVerification'
      required:
      - enabled
      type: object
    DeviceAuthenticationPolicy_mobile_applications_inner_autoEnrollment:
      example:
        enabled: true
      properties:
        enabled:
          description: "Set to true if you want the application to allow Auto Enrollment.\
            \ Auto Enrollment means that the user can authenticate for the first time\
            \ from an unpaired device, and the successful authentication will result\
            \ in the pairing of the device for MFA."
          type: boolean
      required:
      - enabled
      type: object
    DeviceAuthenticationPolicy_mobile_applications_inner:
      example:
        autoEnrollment:
          enabled: true
        deviceAuthorization:
          extraVerification: null
          enabled: true
        pairingKeyLifetime:
          duration: 2
          timeUnit: null
        integrityDetection: null
        pushTimeout:
          duration: 102
          timeUnit: null
        otp:
          enabled: true
        id: id
        push:
          enabled: true
        pushLimit:
          lockDuration:
            duration: 9
            timeUnit: null
          count: 35
          timePeriod:
            duration: 3
            timeUnit: null
      properties:
        id:
          description: The application's ID.
          type: string
        push:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_applications_inner_push'
        pushTimeout:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_applications_inner_pushTimeout'
        pairingKeyLifetime:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_applications_inner_pairingKeyLifetime'
        pushLimit:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_applications_inner_pushLimit'
        otp:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_applications_inner_otp'
        deviceAuthorization:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_applications_inner_deviceAuthorization'
        autoEnrollment:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_applications_inner_autoEnrollment'
        integrityDetection:
          $ref: '#/components/schemas/EnumMFADevicePolicyMobileIntegrityDetection'
      required:
      - id
      type: object
    DeviceAuthenticationPolicy_mobile:
      description: Mobile device authentication policy settings.
      example:
        otp:
          failure:
            count: 6
            coolDown:
              duration: 1
              timeUnit: null
          window:
            stepSize:
              duration: 5
              timeUnit: null
        enabled: true
        applications:
        - autoEnrollment:
            enabled: true
          deviceAuthorization:
            extraVerification: null
            enabled: true
          pairingKeyLifetime:
            duration: 2
            timeUnit: null
          integrityDetection: null
          pushTimeout:
            duration: 102
            timeUnit: null
          otp:
            enabled: true
          id: id
          push:
            enabled: true
          pushLimit:
            lockDuration:
              duration: 9
              timeUnit: null
            count: 35
            timePeriod:
              duration: 3
              timeUnit: null
        - autoEnrollment:
            enabled: true
          deviceAuthorization:
            extraVerification: null
            enabled: true
          pairingKeyLifetime:
            duration: 2
            timeUnit: null
          integrityDetection: null
          pushTimeout:
            duration: 102
            timeUnit: null
          otp:
            enabled: true
          id: id
          push:
            enabled: true
          pushLimit:
            lockDuration:
              duration: 9
              timeUnit: null
            count: 35
            timePeriod:
              duration: 3
              timeUnit: null
      properties:
        enabled:
          description: Enabled or disabled in the policy.
          type: boolean
        otp:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_otp'
        applications:
          items:
            $ref: '#/components/schemas/DeviceAuthenticationPolicy_mobile_applications_inner'
          type: array
      required:
      - enabled
      - otp
      type: object
    DeviceAuthenticationPolicy_totp_otp:
      example:
        failure:
          count: 6
          coolDown:
            duration: 1
            timeUnit: null
      properties:
        failure:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyOfflineDevice_otp_failure'
      required:
      - failure
      type: object
    DeviceAuthenticationPolicy_totp:
      description: TOTP device authentication policy settings.
      example:
        otp:
          failure:
            count: 6
            coolDown:
              duration: 1
              timeUnit: null
        enabled: true
      properties:
        enabled:
          description: Enabled or disabled in the policy.
          type: boolean
        otp:
          $ref: '#/components/schemas/DeviceAuthenticationPolicy_totp_otp'
      required:
      - enabled
      - otp
      type: object
    EntityArray__embedded_pushCredentials_inner:
      anyOf:
      - $ref: '#/components/schemas/MFAPushCredentialAPNS'
      - $ref: '#/components/schemas/MFAPushCredentialFCM'
      - $ref: '#/components/schemas/MFAPushCredentialHMS'
    EntityArray__embedded:
      example:
        fidoDevicesMetadata:
        - null
        - null
        pushCredentials:
        - null
        - null
        fidoPolicies:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          environment:
            id: id
          default: true
          _embedded: "{}"
          name: name
          description: description
          attestationRequirements: null
          enforceDuringAuthentication: false
          id: id
          allowedAuthenticators:
          - id: id
          - id: id
          updatedAt: 2000-01-23T04:56:07.000+00:00
          residentKeyRequirement: null
        - createdAt: 2000-01-23T04:56:07.000+00:00
          environment:
            id: id
          default: true
          _embedded: "{}"
          name: name
          description: description
          attestationRequirements: null
          enforceDuringAuthentication: false
          id: id
          allowedAuthenticators:
          - id: id
          - id: id
          updatedAt: 2000-01-23T04:56:07.000+00:00
          residentKeyRequirement: null
        deviceAuthenticationPolicies:
        - voice:
            otp:
              failure:
                count: 6
                coolDown:
                  duration: 1
                  timeUnit: null
              lifeTime:
                duration: 0
                timeUnit: null
            enabled: true
          totp:
            otp:
              failure:
                count: 6
                coolDown:
                  duration: 1
                  timeUnit: null
            enabled: true
          mobile:
            otp:
              failure:
                count: 6
                coolDown:
                  duration: 1
                  timeUnit: null
              window:
                stepSize:
                  duration: 5
                  timeUnit: null
            enabled: true
            applications:
            - autoEnrollment:
                enabled: true
              deviceAuthorization:
                extraVerification: null
                enabled: true
              pairingKeyLifetime:
                duration: 2
                timeUnit: null
              integrityDetection: null
              pushTimeout:
                duration: 102
                timeUnit: null
              otp:
                enabled: true
              id: id
              push:
                enabled: true
              pushLimit:
                lockDuration:
                  duration: 9
                  timeUnit: null
                count: 35
                timePeriod:
                  duration: 3
                  timeUnit: null
            - autoEnrollment:
                enabled: true
              deviceAuthorization:
                extraVerification: null
                enabled: true
              pairingKeyLifetime:
                duration: 2
                timeUnit: null
              integrityDetection: null
              pushTimeout:
                duration: 102
                timeUnit: null
              otp:
                enabled: true
              id: id
              push:
                enabled: true
              pushLimit:
                lockDuration:
                  duration: 9
                  timeUnit: null
                count: 35
                timePeriod:
                  duration: 3
                  timeUnit: null
          platform:
            enabled: true
            fidoPolicyId: fidoPolicyId
          forSignOnPolicy: true
          environment:
            id: id
          default: true
          name: name
          sms:
            otp:
              failure:
                count: 6
                coolDown:
                  duration: 1
                  timeUnit: null
              lifeTime:
                duration: 0
                timeUnit: null
            enabled: true
          id: id
          securityKey:
            enabled: true
            fidoPolicyId: fidoPolicyId
          email:
            otp:
              failure:
                count: 6
                coolDown:
                  duration: 1
                  timeUnit: null
              lifeTime:
                duration: 0
                timeUnit: null
            enabled: true
          authentication:
            deviceSelection: null
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - voice:
            otp:
              failure:
                count: 6
                coolDown:
                  duration: 1
                  timeUnit: null
              lifeTime:
                duration: 0
                timeUnit: null
            enabled: true
          totp:
            otp:
              failure:
                count: 6
                coolDown:
                  duration: 1
                  timeUnit: null
            enabled: true
          mobile:
            otp:
              failure:
                count: 6
                coolDown:
                  duration: 1
                  timeUnit: null
              window:
                stepSize:
                  duration: 5
                  timeUnit: null
            enabled: true
            applications:
            - autoEnrollment:
                enabled: true
              deviceAuthorization:
                extraVerification: null
                enabled: true
              pairingKeyLifetime:
                duration: 2
                timeUnit: null
              integrityDetection: null
              pushTimeout:
                duration: 102
                timeUnit: null
              otp:
                enabled: true
              id: id
              push:
                enabled: true
              pushLimit:
                lockDuration:
                  duration: 9
                  timeUnit: null
                count: 35
                timePeriod:
                  duration: 3
                  timeUnit: null
            - autoEnrollment:
                enabled: true
              deviceAuthorization:
                extraVerification: null
                enabled: true
              pairingKeyLifetime:
                duration: 2
                timeUnit: null
              integrityDetection: null
              pushTimeout:
                duration: 102
                timeUnit: null
              otp:
                enabled: true
              id: id
              push:
                enabled: true
              pushLimit:
                lockDuration:
                  duration: 9
                  timeUnit: null
                count: 35
                timePeriod:
                  duration: 3
                  timeUnit: null
          platform:
            enabled: true
            fidoPolicyId: fidoPolicyId
          forSignOnPolicy: true
          environment:
            id: id
          default: true
          name: name
          sms:
            otp:
              failure:
                count: 6
                coolDown:
                  duration: 1
                  timeUnit: null
              lifeTime:
                duration: 0
                timeUnit: null
            enabled: true
          id: id
          securityKey:
            enabled: true
            fidoPolicyId: fidoPolicyId
          email:
            otp:
              failure:
                count: 6
                coolDown:
                  duration: 1
                  timeUnit: null
              lifeTime:
                duration: 0
                timeUnit: null
            enabled: true
          authentication:
            deviceSelection: null
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        pushCredentials:
          items:
            $ref: '#/components/schemas/EntityArray__embedded_pushCredentials_inner'
          type: array
        deviceAuthenticationPolicies:
          items:
            $ref: '#/components/schemas/DeviceAuthenticationPolicy'
          type: array
        fidoDevicesMetadata:
          items:
            $ref: '#/components/schemas/FIDODevice'
          type: array
        fidoPolicies:
          items:
            $ref: '#/components/schemas/FIDOPolicy'
          type: array
      type: object
    FIDOPolicy_allowedAuthenticators_inner:
      example:
        id: id
      properties:
        id:
          description: The identifier of the authenticator to allow.
          type: string
      required:
      - id
      type: object
    MFAPushCredentialAPNS_allOf:
      properties:
        key:
          description: A string that Apple uses as an identifier to identify an authentication
            key.  Mandatory.
          type: string
        teamId:
          description: A string that Apple uses as an identifier to identify teams.
          type: string
        token:
          description: A string that Apple uses as the authentication token signing
            key to securely connect to APNS. This is a p8 file with a private key
            format.
          type: string
      required:
      - key
      - teamId
      - token
      type: object
      example: null
    MFAPushCredentialFCM_allOf:
      properties:
        key:
          description: A string that Apple uses as an identifier to identify an authentication
            key.  Mandatory.
          type: string
      required:
      - key
      type: object
      example: null
    MFAPushCredentialHMS_allOf:
      properties:
        clientId:
          description: Used only if type is set to HMS. OAuth 2.0 Client ID from the
            Huawei Developers API console.
          type: string
        clientSecret:
          description: Used only if type is set to HMS. The client secret associated
            with the OAuth 2.0 Client ID.
          type: string
      required:
      - clientId
      - clientSecret
      type: object
      example: null
    MFASettings_authentication:
      deprecated: true
      description: An object that contains the device selection settings.
      example:
        deviceSelection: null
      properties:
        deviceSelection:
          $ref: '#/components/schemas/EnumMFASettingsDeviceSelection'
      required:
      - deviceSelection
      type: object
    MFASettings_lockout:
      description: An object that contains lockout settings.
      example:
        durationSeconds: 6
        failureCount: 0
      properties:
        failureCount:
          description: An integer that defines the maximum number of incorrect authentication
            attempts before the account is locked.
          type: integer
        durationSeconds:
          description: An integer that defines the number of seconds to keep the account
            in a locked state.
          type: integer
      required:
      - failureCount
      type: object
    MFASettings_pairing:
      description: An object that contains pairing settings.
      example:
        pairingKeyFormat: null
        maxAllowedDevices: 2
      properties:
        maxAllowedDevices:
          default: 5
          description: An integer that defines the maximum number of MFA devices each
            user can have. This can be any number up to 15. The default value is 5.
          maximum: 15
          type: integer
        pairingKeyFormat:
          $ref: '#/components/schemas/EnumMFASettingsPairingKeyFormat'
      required:
      - maxAllowedDevices
      - pairingKeyFormat
      type: object
    MFASettings_phoneExtensions:
      description: Contains settings for phone extension support.
      example:
        enabled: true
      properties:
        enabled:
          description: "Set to `true` to allow one-time passwords to be delivered\
            \ via voice to phone numbers that include extensions. Set to `false` to\
            \ disable support for phone numbers with extensions. By default, support\
            \ for extensions is disabled."
          type: boolean
      type: object
    P1Error_details_inner_innerError:
      description: Additional details to help the client developer resolve the fault
        (primarily for UI validation reasons).
      properties:
        rangeMinimumValue:
          description: Errors that failed due to range violation. This attribute represents
            the minimum value of the range.
          type: integer
        rangeMaximumValue:
          description: The maximum range or value of an attribute.
          type: integer
        allowedPattern:
          description: A regex pattern describing an acceptable input pattern.
          type: string
        allowedValues:
          description: A list describing acceptable values.
          items:
            type: string
          type: array
        maximumValue:
          description: The maximum value allowed for the request.
          type: integer
      type: object
    P1Error_details_inner:
      properties:
        code:
          description: A general fault code which the client must handle to provide
            all exception handling routines and to localize messages for users. This
            code is common across all PingOne services and is human readable (such
            as a defined constant rather than a number).
          type: string
        target:
          description: The item that caused the error (such as a form field ID or
            an attribute inside a JSON object).
          type: string
        message:
          description: A short description of the error. This message is intended
            to assist with debugging and is returned in English only.
          type: string
        innerError:
          $ref: '#/components/schemas/P1Error_details_inner_innerError'
      type: object
  securitySchemes:
    bearer:
      bearerFormat: JWT
      description: OAuth bearer token (see documentation)
      scheme: bearer
      type: http
