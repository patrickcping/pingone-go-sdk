/*
PingOne Platform API - PingOne MFA

The PingOne Platform API covering the PingOne MFA service

API version: 2021-10-17
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mfa

import (
	"encoding/json"
)

// DeviceAuthenticationPolicyOfflineDeviceOtpFailure struct for DeviceAuthenticationPolicyOfflineDeviceOtpFailure
type DeviceAuthenticationPolicyOfflineDeviceOtpFailure struct {
	// The maximum number of times that the OTP entry can fail for a user, before they are blocked.
	Count *int32 `json:"count,omitempty"`
	CoolDown *DeviceAuthenticationPolicyOfflineDeviceOtpFailureCoolDown `json:"coolDown,omitempty"`
}

// NewDeviceAuthenticationPolicyOfflineDeviceOtpFailure instantiates a new DeviceAuthenticationPolicyOfflineDeviceOtpFailure object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceAuthenticationPolicyOfflineDeviceOtpFailure() *DeviceAuthenticationPolicyOfflineDeviceOtpFailure {
	this := DeviceAuthenticationPolicyOfflineDeviceOtpFailure{}
	return &this
}

// NewDeviceAuthenticationPolicyOfflineDeviceOtpFailureWithDefaults instantiates a new DeviceAuthenticationPolicyOfflineDeviceOtpFailure object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceAuthenticationPolicyOfflineDeviceOtpFailureWithDefaults() *DeviceAuthenticationPolicyOfflineDeviceOtpFailure {
	this := DeviceAuthenticationPolicyOfflineDeviceOtpFailure{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicyOfflineDeviceOtpFailure) GetCount() int32 {
	if o == nil || o.Count == nil {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyOfflineDeviceOtpFailure) GetCountOk() (*int32, bool) {
	if o == nil || o.Count == nil {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicyOfflineDeviceOtpFailure) HasCount() bool {
	if o != nil && o.Count != nil {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *DeviceAuthenticationPolicyOfflineDeviceOtpFailure) SetCount(v int32) {
	o.Count = &v
}

// GetCoolDown returns the CoolDown field value if set, zero value otherwise.
func (o *DeviceAuthenticationPolicyOfflineDeviceOtpFailure) GetCoolDown() DeviceAuthenticationPolicyOfflineDeviceOtpFailureCoolDown {
	if o == nil || o.CoolDown == nil {
		var ret DeviceAuthenticationPolicyOfflineDeviceOtpFailureCoolDown
		return ret
	}
	return *o.CoolDown
}

// GetCoolDownOk returns a tuple with the CoolDown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceAuthenticationPolicyOfflineDeviceOtpFailure) GetCoolDownOk() (*DeviceAuthenticationPolicyOfflineDeviceOtpFailureCoolDown, bool) {
	if o == nil || o.CoolDown == nil {
		return nil, false
	}
	return o.CoolDown, true
}

// HasCoolDown returns a boolean if a field has been set.
func (o *DeviceAuthenticationPolicyOfflineDeviceOtpFailure) HasCoolDown() bool {
	if o != nil && o.CoolDown != nil {
		return true
	}

	return false
}

// SetCoolDown gets a reference to the given DeviceAuthenticationPolicyOfflineDeviceOtpFailureCoolDown and assigns it to the CoolDown field.
func (o *DeviceAuthenticationPolicyOfflineDeviceOtpFailure) SetCoolDown(v DeviceAuthenticationPolicyOfflineDeviceOtpFailureCoolDown) {
	o.CoolDown = &v
}

func (o DeviceAuthenticationPolicyOfflineDeviceOtpFailure) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Count != nil {
		toSerialize["count"] = o.Count
	}
	if o.CoolDown != nil {
		toSerialize["coolDown"] = o.CoolDown
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceAuthenticationPolicyOfflineDeviceOtpFailure struct {
	value *DeviceAuthenticationPolicyOfflineDeviceOtpFailure
	isSet bool
}

func (v NullableDeviceAuthenticationPolicyOfflineDeviceOtpFailure) Get() *DeviceAuthenticationPolicyOfflineDeviceOtpFailure {
	return v.value
}

func (v *NullableDeviceAuthenticationPolicyOfflineDeviceOtpFailure) Set(val *DeviceAuthenticationPolicyOfflineDeviceOtpFailure) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceAuthenticationPolicyOfflineDeviceOtpFailure) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceAuthenticationPolicyOfflineDeviceOtpFailure) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceAuthenticationPolicyOfflineDeviceOtpFailure(val *DeviceAuthenticationPolicyOfflineDeviceOtpFailure) *NullableDeviceAuthenticationPolicyOfflineDeviceOtpFailure {
	return &NullableDeviceAuthenticationPolicyOfflineDeviceOtpFailure{value: val, isSet: true}
}

func (v NullableDeviceAuthenticationPolicyOfflineDeviceOtpFailure) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceAuthenticationPolicyOfflineDeviceOtpFailure) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


