/*
PingOne Platform API - Credentials

Testing CredentialTypesApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package credentials

import (
	"context"
	"testing"

	openapiclient "github.com/patrickcping/pingone-go-sdk-v2/credentials"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_credentials_CredentialTypesApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CredentialTypesApiService CreateCredentialType", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var environmentID string

		resp, httpRes, err := apiClient.CredentialTypesApi.CreateCredentialType(context.Background(), environmentID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CredentialTypesApiService DeleteACredentialType", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var environmentID string
		var credentialTypeID string

		httpRes, err := apiClient.CredentialTypesApi.DeleteCredentialType(context.Background(), environmentID, credentialTypeID).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CredentialTypesApiService ReadAllCredentialTypes", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var environmentID string

		resp, httpRes, err := apiClient.CredentialTypesApi.ReadAllCredentialTypes(context.Background(), environmentID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CredentialTypesApiService ReadOneCredentialType", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var environmentID string
		var credentialTypeID string

		resp, httpRes, err := apiClient.CredentialTypesApi.ReadOneCredentialType(context.Background(), environmentID, credentialTypeID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CredentialTypesApiService UpdateACredentialType", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var environmentID string
		var credentialTypeID string

		resp, httpRes, err := apiClient.CredentialTypesApi.UpdateCredentialType(context.Background(), environmentID, credentialTypeID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
