/*
PingOne Platform API - Credentials

The PingOne Platform API covering the PingOne Credentials service

API version: 2023-03-30
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package credentials

import (
	"encoding/json"
)

// checks if the CredentialType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CredentialType{}

// CredentialType struct for CredentialType
type CredentialType struct {
	// A string that specifies an SVG formatted image containing placeholders for the credential fields that need to be displayed in the image.
	CardDesignTemplate string `json:"cardDesignTemplate"`
	// A string that specifies the descriptor of the credential type. Can be non-identity types such as proof of employment or proof of insurance.
	CardType *string `json:"cardType,omitempty"`
	// A string that specifies the date and time the credential type was created.
	CreatedAt *string `json:"createdAt,omitempty"`
	// A string that specifies the description of the credential type.
	Description *string `json:"description,omitempty"`
	Environment *Environment `json:"environment,omitempty"`
	// A string that specifies the identifier (UUID) associated with the credential type.
	Id *string `json:"id,omitempty"`
	Issuer *CredentialTypeIssuer `json:"issuer,omitempty"`
	// v issuer name associated with the card, can differ from title.
	IssuerName *string `json:"issuerName,omitempty"`
	Metadata CredentialTypeMetaData `json:"metadata"`
	// A string that specifies the title of the credential. Verification sites are expected to be able to request the issued credential from the compatible wallet app using the title.
	Title string `json:"title"`
	// A string that specifies the date and time the credential type was last updated; can be null.
	UpdatedAt *string `json:"updatedAt,omitempty"`
}

// NewCredentialType instantiates a new CredentialType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialType(cardDesignTemplate string, metadata CredentialTypeMetaData, title string) *CredentialType {
	this := CredentialType{}
	this.CardDesignTemplate = cardDesignTemplate
	this.Metadata = metadata
	this.Title = title
	return &this
}

// NewCredentialTypeWithDefaults instantiates a new CredentialType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialTypeWithDefaults() *CredentialType {
	this := CredentialType{}
	return &this
}

// GetCardDesignTemplate returns the CardDesignTemplate field value
func (o *CredentialType) GetCardDesignTemplate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardDesignTemplate
}

// GetCardDesignTemplateOk returns a tuple with the CardDesignTemplate field value
// and a boolean to check if the value has been set.
func (o *CredentialType) GetCardDesignTemplateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardDesignTemplate, true
}

// SetCardDesignTemplate sets field value
func (o *CredentialType) SetCardDesignTemplate(v string) {
	o.CardDesignTemplate = v
}

// GetCardType returns the CardType field value if set, zero value otherwise.
func (o *CredentialType) GetCardType() string {
	if o == nil || IsNil(o.CardType) {
		var ret string
		return ret
	}
	return *o.CardType
}

// GetCardTypeOk returns a tuple with the CardType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialType) GetCardTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CardType) {
		return nil, false
	}
	return o.CardType, true
}

// HasCardType returns a boolean if a field has been set.
func (o *CredentialType) HasCardType() bool {
	if o != nil && !IsNil(o.CardType) {
		return true
	}

	return false
}

// SetCardType gets a reference to the given string and assigns it to the CardType field.
func (o *CredentialType) SetCardType(v string) {
	o.CardType = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CredentialType) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialType) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CredentialType) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *CredentialType) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CredentialType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CredentialType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CredentialType) SetDescription(v string) {
	o.Description = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *CredentialType) GetEnvironment() Environment {
	if o == nil || IsNil(o.Environment) {
		var ret Environment
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialType) GetEnvironmentOk() (*Environment, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *CredentialType) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given Environment and assigns it to the Environment field.
func (o *CredentialType) SetEnvironment(v Environment) {
	o.Environment = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CredentialType) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialType) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CredentialType) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CredentialType) SetId(v string) {
	o.Id = &v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *CredentialType) GetIssuer() CredentialTypeIssuer {
	if o == nil || IsNil(o.Issuer) {
		var ret CredentialTypeIssuer
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialType) GetIssuerOk() (*CredentialTypeIssuer, bool) {
	if o == nil || IsNil(o.Issuer) {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *CredentialType) HasIssuer() bool {
	if o != nil && !IsNil(o.Issuer) {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given CredentialTypeIssuer and assigns it to the Issuer field.
func (o *CredentialType) SetIssuer(v CredentialTypeIssuer) {
	o.Issuer = &v
}

// GetIssuerName returns the IssuerName field value if set, zero value otherwise.
func (o *CredentialType) GetIssuerName() string {
	if o == nil || IsNil(o.IssuerName) {
		var ret string
		return ret
	}
	return *o.IssuerName
}

// GetIssuerNameOk returns a tuple with the IssuerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialType) GetIssuerNameOk() (*string, bool) {
	if o == nil || IsNil(o.IssuerName) {
		return nil, false
	}
	return o.IssuerName, true
}

// HasIssuerName returns a boolean if a field has been set.
func (o *CredentialType) HasIssuerName() bool {
	if o != nil && !IsNil(o.IssuerName) {
		return true
	}

	return false
}

// SetIssuerName gets a reference to the given string and assigns it to the IssuerName field.
func (o *CredentialType) SetIssuerName(v string) {
	o.IssuerName = &v
}

// GetMetadata returns the Metadata field value
func (o *CredentialType) GetMetadata() CredentialTypeMetaData {
	if o == nil {
		var ret CredentialTypeMetaData
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *CredentialType) GetMetadataOk() (*CredentialTypeMetaData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *CredentialType) SetMetadata(v CredentialTypeMetaData) {
	o.Metadata = v
}

// GetTitle returns the Title field value
func (o *CredentialType) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *CredentialType) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *CredentialType) SetTitle(v string) {
	o.Title = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CredentialType) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialType) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CredentialType) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *CredentialType) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o CredentialType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CredentialType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cardDesignTemplate"] = o.CardDesignTemplate
	if !IsNil(o.CardType) {
		toSerialize["cardType"] = o.CardType
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Issuer) {
		toSerialize["issuer"] = o.Issuer
	}
	if !IsNil(o.IssuerName) {
		toSerialize["issuerName"] = o.IssuerName
	}
	toSerialize["metadata"] = o.Metadata
	toSerialize["title"] = o.Title
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableCredentialType struct {
	value *CredentialType
	isSet bool
}

func (v NullableCredentialType) Get() *CredentialType {
	return v.value
}

func (v *NullableCredentialType) Set(val *CredentialType) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialType) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialType(val *CredentialType) *NullableCredentialType {
	return &NullableCredentialType{value: val, isSet: true}
}

func (v NullableCredentialType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


