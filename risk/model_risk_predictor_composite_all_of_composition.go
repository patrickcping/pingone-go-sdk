/*
PingOne Platform API - PingOne Risk

The PingOne Platform API covering the PingOne Risk service

API version: 2021-10-17
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package risk

import (
	"encoding/json"
)

// checks if the RiskPredictorCompositeAllOfComposition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RiskPredictorCompositeAllOfComposition{}

// RiskPredictorCompositeAllOfComposition struct for RiskPredictorCompositeAllOfComposition
type RiskPredictorCompositeAllOfComposition struct {
	Condition NullableOneOfRiskPredictorCompositeNotRiskPredictorCompositeAndRiskPredictorCompositeOr `json:"condition"`
	Level EnumRiskLevel `json:"level"`
}

// NewRiskPredictorCompositeAllOfComposition instantiates a new RiskPredictorCompositeAllOfComposition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRiskPredictorCompositeAllOfComposition(condition NullableOneOfRiskPredictorCompositeNotRiskPredictorCompositeAndRiskPredictorCompositeOr, level EnumRiskLevel) *RiskPredictorCompositeAllOfComposition {
	this := RiskPredictorCompositeAllOfComposition{}
	this.Condition = condition
	this.Level = level
	return &this
}

// NewRiskPredictorCompositeAllOfCompositionWithDefaults instantiates a new RiskPredictorCompositeAllOfComposition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRiskPredictorCompositeAllOfCompositionWithDefaults() *RiskPredictorCompositeAllOfComposition {
	this := RiskPredictorCompositeAllOfComposition{}
	return &this
}

// GetCondition returns the Condition field value
// If the value is explicit nil, the zero value for OneOfRiskPredictorCompositeNotRiskPredictorCompositeAndRiskPredictorCompositeOr will be returned
func (o *RiskPredictorCompositeAllOfComposition) GetCondition() OneOfRiskPredictorCompositeNotRiskPredictorCompositeAndRiskPredictorCompositeOr {
	if o == nil || o.Condition.Get() == nil {
		var ret OneOfRiskPredictorCompositeNotRiskPredictorCompositeAndRiskPredictorCompositeOr
		return ret
	}

	return *o.Condition.Get()
}

// GetConditionOk returns a tuple with the Condition field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RiskPredictorCompositeAllOfComposition) GetConditionOk() (*OneOfRiskPredictorCompositeNotRiskPredictorCompositeAndRiskPredictorCompositeOr, bool) {
	if o == nil {
		return nil, false
	}
	return o.Condition.Get(), o.Condition.IsSet()
}

// SetCondition sets field value
func (o *RiskPredictorCompositeAllOfComposition) SetCondition(v OneOfRiskPredictorCompositeNotRiskPredictorCompositeAndRiskPredictorCompositeOr) {
	o.Condition.Set(&v)
}

// GetLevel returns the Level field value
func (o *RiskPredictorCompositeAllOfComposition) GetLevel() EnumRiskLevel {
	if o == nil {
		var ret EnumRiskLevel
		return ret
	}

	return o.Level
}

// GetLevelOk returns a tuple with the Level field value
// and a boolean to check if the value has been set.
func (o *RiskPredictorCompositeAllOfComposition) GetLevelOk() (*EnumRiskLevel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Level, true
}

// SetLevel sets field value
func (o *RiskPredictorCompositeAllOfComposition) SetLevel(v EnumRiskLevel) {
	o.Level = v
}

func (o RiskPredictorCompositeAllOfComposition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RiskPredictorCompositeAllOfComposition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["condition"] = o.Condition.Get()
	toSerialize["level"] = o.Level
	return toSerialize, nil
}

type NullableRiskPredictorCompositeAllOfComposition struct {
	value *RiskPredictorCompositeAllOfComposition
	isSet bool
}

func (v NullableRiskPredictorCompositeAllOfComposition) Get() *RiskPredictorCompositeAllOfComposition {
	return v.value
}

func (v *NullableRiskPredictorCompositeAllOfComposition) Set(val *RiskPredictorCompositeAllOfComposition) {
	v.value = val
	v.isSet = true
}

func (v NullableRiskPredictorCompositeAllOfComposition) IsSet() bool {
	return v.isSet
}

func (v *NullableRiskPredictorCompositeAllOfComposition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRiskPredictorCompositeAllOfComposition(val *RiskPredictorCompositeAllOfComposition) *NullableRiskPredictorCompositeAllOfComposition {
	return &NullableRiskPredictorCompositeAllOfComposition{value: val, isSet: true}
}

func (v NullableRiskPredictorCompositeAllOfComposition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRiskPredictorCompositeAllOfComposition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


