/*
PingOne Platform API - PingOne Risk

The PingOne Platform API covering the PingOne Risk service

API version: 2021-10-17
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package risk

import (
	"encoding/json"
	"time"
)

// checks if the RiskPredictorNewDeviceAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RiskPredictorNewDeviceAllOf{}

// RiskPredictorNewDeviceAllOf struct for RiskPredictorNewDeviceAllOf
type RiskPredictorNewDeviceAllOf struct {
	Detect EnumPredictorNewDeviceDetectType `json:"detect"`
	// You can use the `activationAt` parameter to specify a date on which the learning process for the predictor should be restarted. This can be used in conjunction with the fallback setting (`default.result.level`) to force strong authentication when moving the predictor to production. The date should be in an RFC3339 format. Note that activation date uses UTC time.
	ActivationAt *time.Time `json:"activationAt,omitempty"`
}

// NewRiskPredictorNewDeviceAllOf instantiates a new RiskPredictorNewDeviceAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRiskPredictorNewDeviceAllOf(detect EnumPredictorNewDeviceDetectType) *RiskPredictorNewDeviceAllOf {
	this := RiskPredictorNewDeviceAllOf{}
	this.Detect = detect
	return &this
}

// NewRiskPredictorNewDeviceAllOfWithDefaults instantiates a new RiskPredictorNewDeviceAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRiskPredictorNewDeviceAllOfWithDefaults() *RiskPredictorNewDeviceAllOf {
	this := RiskPredictorNewDeviceAllOf{}
	return &this
}

// GetDetect returns the Detect field value
func (o *RiskPredictorNewDeviceAllOf) GetDetect() EnumPredictorNewDeviceDetectType {
	if o == nil {
		var ret EnumPredictorNewDeviceDetectType
		return ret
	}

	return o.Detect
}

// GetDetectOk returns a tuple with the Detect field value
// and a boolean to check if the value has been set.
func (o *RiskPredictorNewDeviceAllOf) GetDetectOk() (*EnumPredictorNewDeviceDetectType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Detect, true
}

// SetDetect sets field value
func (o *RiskPredictorNewDeviceAllOf) SetDetect(v EnumPredictorNewDeviceDetectType) {
	o.Detect = v
}

// GetActivationAt returns the ActivationAt field value if set, zero value otherwise.
func (o *RiskPredictorNewDeviceAllOf) GetActivationAt() time.Time {
	if o == nil || IsNil(o.ActivationAt) {
		var ret time.Time
		return ret
	}
	return *o.ActivationAt
}

// GetActivationAtOk returns a tuple with the ActivationAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskPredictorNewDeviceAllOf) GetActivationAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ActivationAt) {
		return nil, false
	}
	return o.ActivationAt, true
}

// HasActivationAt returns a boolean if a field has been set.
func (o *RiskPredictorNewDeviceAllOf) HasActivationAt() bool {
	if o != nil && !IsNil(o.ActivationAt) {
		return true
	}

	return false
}

// SetActivationAt gets a reference to the given time.Time and assigns it to the ActivationAt field.
func (o *RiskPredictorNewDeviceAllOf) SetActivationAt(v time.Time) {
	o.ActivationAt = &v
}

func (o RiskPredictorNewDeviceAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RiskPredictorNewDeviceAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["detect"] = o.Detect
	if !IsNil(o.ActivationAt) {
		toSerialize["activationAt"] = o.ActivationAt
	}
	return toSerialize, nil
}

type NullableRiskPredictorNewDeviceAllOf struct {
	value *RiskPredictorNewDeviceAllOf
	isSet bool
}

func (v NullableRiskPredictorNewDeviceAllOf) Get() *RiskPredictorNewDeviceAllOf {
	return v.value
}

func (v *NullableRiskPredictorNewDeviceAllOf) Set(val *RiskPredictorNewDeviceAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableRiskPredictorNewDeviceAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableRiskPredictorNewDeviceAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRiskPredictorNewDeviceAllOf(val *RiskPredictorNewDeviceAllOf) *NullableRiskPredictorNewDeviceAllOf {
	return &NullableRiskPredictorNewDeviceAllOf{value: val, isSet: true}
}

func (v NullableRiskPredictorNewDeviceAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRiskPredictorNewDeviceAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


