/*
PingOne Platform API - PingOne Risk

The PingOne Platform API covering the PingOne Risk service

API version: 2021-10-17
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package risk

import (
	"encoding/json"
)

// checks if the RiskPredictorDefault type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RiskPredictorDefault{}

// RiskPredictorDefault Contains the default values used for a new risk predictor.
type RiskPredictorDefault struct {
	// An integer type. This specifies the weight assigned to the risk predictor in a new policy by default.
	Weight int32 `json:"weight"`
	Score *int32 `json:"score,omitempty"`
	Evaluated *bool `json:"evaluated,omitempty"`
	Result RiskPredictorDefaultResult `json:"result"`
}

// NewRiskPredictorDefault instantiates a new RiskPredictorDefault object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRiskPredictorDefault(weight int32, result RiskPredictorDefaultResult) *RiskPredictorDefault {
	this := RiskPredictorDefault{}
	this.Weight = weight
	this.Result = result
	return &this
}

// NewRiskPredictorDefaultWithDefaults instantiates a new RiskPredictorDefault object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRiskPredictorDefaultWithDefaults() *RiskPredictorDefault {
	this := RiskPredictorDefault{}
	return &this
}

// GetWeight returns the Weight field value
func (o *RiskPredictorDefault) GetWeight() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Weight
}

// GetWeightOk returns a tuple with the Weight field value
// and a boolean to check if the value has been set.
func (o *RiskPredictorDefault) GetWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Weight, true
}

// SetWeight sets field value
func (o *RiskPredictorDefault) SetWeight(v int32) {
	o.Weight = v
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *RiskPredictorDefault) GetScore() int32 {
	if o == nil || IsNil(o.Score) {
		var ret int32
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskPredictorDefault) GetScoreOk() (*int32, bool) {
	if o == nil || IsNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *RiskPredictorDefault) HasScore() bool {
	if o != nil && !IsNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given int32 and assigns it to the Score field.
func (o *RiskPredictorDefault) SetScore(v int32) {
	o.Score = &v
}

// GetEvaluated returns the Evaluated field value if set, zero value otherwise.
func (o *RiskPredictorDefault) GetEvaluated() bool {
	if o == nil || IsNil(o.Evaluated) {
		var ret bool
		return ret
	}
	return *o.Evaluated
}

// GetEvaluatedOk returns a tuple with the Evaluated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskPredictorDefault) GetEvaluatedOk() (*bool, bool) {
	if o == nil || IsNil(o.Evaluated) {
		return nil, false
	}
	return o.Evaluated, true
}

// HasEvaluated returns a boolean if a field has been set.
func (o *RiskPredictorDefault) HasEvaluated() bool {
	if o != nil && !IsNil(o.Evaluated) {
		return true
	}

	return false
}

// SetEvaluated gets a reference to the given bool and assigns it to the Evaluated field.
func (o *RiskPredictorDefault) SetEvaluated(v bool) {
	o.Evaluated = &v
}

// GetResult returns the Result field value
func (o *RiskPredictorDefault) GetResult() RiskPredictorDefaultResult {
	if o == nil {
		var ret RiskPredictorDefaultResult
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *RiskPredictorDefault) GetResultOk() (*RiskPredictorDefaultResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *RiskPredictorDefault) SetResult(v RiskPredictorDefaultResult) {
	o.Result = v
}

func (o RiskPredictorDefault) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RiskPredictorDefault) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["weight"] = o.Weight
	if !IsNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	if !IsNil(o.Evaluated) {
		toSerialize["evaluated"] = o.Evaluated
	}
	toSerialize["result"] = o.Result
	return toSerialize, nil
}

type NullableRiskPredictorDefault struct {
	value *RiskPredictorDefault
	isSet bool
}

func (v NullableRiskPredictorDefault) Get() *RiskPredictorDefault {
	return v.value
}

func (v *NullableRiskPredictorDefault) Set(val *RiskPredictorDefault) {
	v.value = val
	v.isSet = true
}

func (v NullableRiskPredictorDefault) IsSet() bool {
	return v.isSet
}

func (v *NullableRiskPredictorDefault) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRiskPredictorDefault(val *RiskPredictorDefault) *NullableRiskPredictorDefault {
	return &NullableRiskPredictorDefault{value: val, isSet: true}
}

func (v NullableRiskPredictorDefault) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRiskPredictorDefault) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


