/*
PingOne Platform API - PingOne Risk

The PingOne Platform API covering the PingOne Risk service

API version: 2021-10-17
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package risk

import (
	"encoding/json"
)

// EntityArrayEmbedded struct for EntityArrayEmbedded
type EntityArrayEmbedded struct {
	RiskPolicySets []RiskPolicySet `json:"riskPolicySets,omitempty"`
	RiskPredictors []RiskPredictor `json:"riskPredictors,omitempty"`
}

// NewEntityArrayEmbedded instantiates a new EntityArrayEmbedded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntityArrayEmbedded() *EntityArrayEmbedded {
	this := EntityArrayEmbedded{}
	return &this
}

// NewEntityArrayEmbeddedWithDefaults instantiates a new EntityArrayEmbedded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityArrayEmbeddedWithDefaults() *EntityArrayEmbedded {
	this := EntityArrayEmbedded{}
	return &this
}

// GetRiskPolicySets returns the RiskPolicySets field value if set, zero value otherwise.
func (o *EntityArrayEmbedded) GetRiskPolicySets() []RiskPolicySet {
	if o == nil || o.RiskPolicySets == nil {
		var ret []RiskPolicySet
		return ret
	}
	return o.RiskPolicySets
}

// GetRiskPolicySetsOk returns a tuple with the RiskPolicySets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityArrayEmbedded) GetRiskPolicySetsOk() ([]RiskPolicySet, bool) {
	if o == nil || o.RiskPolicySets == nil {
		return nil, false
	}
	return o.RiskPolicySets, true
}

// HasRiskPolicySets returns a boolean if a field has been set.
func (o *EntityArrayEmbedded) HasRiskPolicySets() bool {
	if o != nil && o.RiskPolicySets != nil {
		return true
	}

	return false
}

// SetRiskPolicySets gets a reference to the given []RiskPolicySet and assigns it to the RiskPolicySets field.
func (o *EntityArrayEmbedded) SetRiskPolicySets(v []RiskPolicySet) {
	o.RiskPolicySets = v
}

// GetRiskPredictors returns the RiskPredictors field value if set, zero value otherwise.
func (o *EntityArrayEmbedded) GetRiskPredictors() []RiskPredictor {
	if o == nil || o.RiskPredictors == nil {
		var ret []RiskPredictor
		return ret
	}
	return o.RiskPredictors
}

// GetRiskPredictorsOk returns a tuple with the RiskPredictors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityArrayEmbedded) GetRiskPredictorsOk() ([]RiskPredictor, bool) {
	if o == nil || o.RiskPredictors == nil {
		return nil, false
	}
	return o.RiskPredictors, true
}

// HasRiskPredictors returns a boolean if a field has been set.
func (o *EntityArrayEmbedded) HasRiskPredictors() bool {
	if o != nil && o.RiskPredictors != nil {
		return true
	}

	return false
}

// SetRiskPredictors gets a reference to the given []RiskPredictor and assigns it to the RiskPredictors field.
func (o *EntityArrayEmbedded) SetRiskPredictors(v []RiskPredictor) {
	o.RiskPredictors = v
}

func (o EntityArrayEmbedded) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RiskPolicySets != nil {
		toSerialize["riskPolicySets"] = o.RiskPolicySets
	}
	if o.RiskPredictors != nil {
		toSerialize["riskPredictors"] = o.RiskPredictors
	}
	return json.Marshal(toSerialize)
}

type NullableEntityArrayEmbedded struct {
	value *EntityArrayEmbedded
	isSet bool
}

func (v NullableEntityArrayEmbedded) Get() *EntityArrayEmbedded {
	return v.value
}

func (v *NullableEntityArrayEmbedded) Set(val *EntityArrayEmbedded) {
	v.value = val
	v.isSet = true
}

func (v NullableEntityArrayEmbedded) IsSet() bool {
	return v.isSet
}

func (v *NullableEntityArrayEmbedded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntityArrayEmbedded(val *EntityArrayEmbedded) *NullableEntityArrayEmbedded {
	return &NullableEntityArrayEmbedded{value: val, isSet: true}
}

func (v NullableEntityArrayEmbedded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntityArrayEmbedded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


