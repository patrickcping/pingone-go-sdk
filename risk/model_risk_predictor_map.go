/*
PingOne Platform API - PingOne Risk

The PingOne Platform API covering the PingOne Risk service

API version: 2021-10-17
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package risk

import (
	"encoding/json"
)

// checks if the RiskPredictorMap type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RiskPredictorMap{}

// RiskPredictorMap An object that defines the mapping of risk levels for the list of all results.
type RiskPredictorMap struct {
	High *RiskPredictorItemMap `json:"high,omitempty"`
	Medium *RiskPredictorItemMap `json:"medium,omitempty"`
	Low *RiskPredictorItemMap `json:"low,omitempty"`
}

// NewRiskPredictorMap instantiates a new RiskPredictorMap object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRiskPredictorMap() *RiskPredictorMap {
	this := RiskPredictorMap{}
	return &this
}

// NewRiskPredictorMapWithDefaults instantiates a new RiskPredictorMap object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRiskPredictorMapWithDefaults() *RiskPredictorMap {
	this := RiskPredictorMap{}
	return &this
}

// GetHigh returns the High field value if set, zero value otherwise.
func (o *RiskPredictorMap) GetHigh() RiskPredictorItemMap {
	if o == nil || IsNil(o.High) {
		var ret RiskPredictorItemMap
		return ret
	}
	return *o.High
}

// GetHighOk returns a tuple with the High field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskPredictorMap) GetHighOk() (*RiskPredictorItemMap, bool) {
	if o == nil || IsNil(o.High) {
		return nil, false
	}
	return o.High, true
}

// HasHigh returns a boolean if a field has been set.
func (o *RiskPredictorMap) HasHigh() bool {
	if o != nil && !IsNil(o.High) {
		return true
	}

	return false
}

// SetHigh gets a reference to the given RiskPredictorItemMap and assigns it to the High field.
func (o *RiskPredictorMap) SetHigh(v RiskPredictorItemMap) {
	o.High = &v
}

// GetMedium returns the Medium field value if set, zero value otherwise.
func (o *RiskPredictorMap) GetMedium() RiskPredictorItemMap {
	if o == nil || IsNil(o.Medium) {
		var ret RiskPredictorItemMap
		return ret
	}
	return *o.Medium
}

// GetMediumOk returns a tuple with the Medium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskPredictorMap) GetMediumOk() (*RiskPredictorItemMap, bool) {
	if o == nil || IsNil(o.Medium) {
		return nil, false
	}
	return o.Medium, true
}

// HasMedium returns a boolean if a field has been set.
func (o *RiskPredictorMap) HasMedium() bool {
	if o != nil && !IsNil(o.Medium) {
		return true
	}

	return false
}

// SetMedium gets a reference to the given RiskPredictorItemMap and assigns it to the Medium field.
func (o *RiskPredictorMap) SetMedium(v RiskPredictorItemMap) {
	o.Medium = &v
}

// GetLow returns the Low field value if set, zero value otherwise.
func (o *RiskPredictorMap) GetLow() RiskPredictorItemMap {
	if o == nil || IsNil(o.Low) {
		var ret RiskPredictorItemMap
		return ret
	}
	return *o.Low
}

// GetLowOk returns a tuple with the Low field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskPredictorMap) GetLowOk() (*RiskPredictorItemMap, bool) {
	if o == nil || IsNil(o.Low) {
		return nil, false
	}
	return o.Low, true
}

// HasLow returns a boolean if a field has been set.
func (o *RiskPredictorMap) HasLow() bool {
	if o != nil && !IsNil(o.Low) {
		return true
	}

	return false
}

// SetLow gets a reference to the given RiskPredictorItemMap and assigns it to the Low field.
func (o *RiskPredictorMap) SetLow(v RiskPredictorItemMap) {
	o.Low = &v
}

func (o RiskPredictorMap) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RiskPredictorMap) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.High) {
		toSerialize["high"] = o.High
	}
	if !IsNil(o.Medium) {
		toSerialize["medium"] = o.Medium
	}
	if !IsNil(o.Low) {
		toSerialize["low"] = o.Low
	}
	return toSerialize, nil
}

type NullableRiskPredictorMap struct {
	value *RiskPredictorMap
	isSet bool
}

func (v NullableRiskPredictorMap) Get() *RiskPredictorMap {
	return v.value
}

func (v *NullableRiskPredictorMap) Set(val *RiskPredictorMap) {
	v.value = val
	v.isSet = true
}

func (v NullableRiskPredictorMap) IsSet() bool {
	return v.isSet
}

func (v *NullableRiskPredictorMap) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRiskPredictorMap(val *RiskPredictorMap) *NullableRiskPredictorMap {
	return &NullableRiskPredictorMap{value: val, isSet: true}
}

func (v NullableRiskPredictorMap) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRiskPredictorMap) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


