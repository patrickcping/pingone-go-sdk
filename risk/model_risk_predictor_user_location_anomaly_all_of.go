/*
PingOne Platform API - PingOne Risk

The PingOne Platform API covering the PingOne Risk service

API version: 2021-10-17
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package risk

import (
	"encoding/json"
)

// checks if the RiskPredictorUserLocationAnomalyAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RiskPredictorUserLocationAnomalyAllOf{}

// RiskPredictorUserLocationAnomalyAllOf struct for RiskPredictorUserLocationAnomalyAllOf
type RiskPredictorUserLocationAnomalyAllOf struct {
	Days *int32 `json:"days,omitempty"`
	Radius RiskPredictorUserLocationAnomalyAllOfRadius `json:"radius"`
}

// NewRiskPredictorUserLocationAnomalyAllOf instantiates a new RiskPredictorUserLocationAnomalyAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRiskPredictorUserLocationAnomalyAllOf(radius RiskPredictorUserLocationAnomalyAllOfRadius) *RiskPredictorUserLocationAnomalyAllOf {
	this := RiskPredictorUserLocationAnomalyAllOf{}
	this.Radius = radius
	return &this
}

// NewRiskPredictorUserLocationAnomalyAllOfWithDefaults instantiates a new RiskPredictorUserLocationAnomalyAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRiskPredictorUserLocationAnomalyAllOfWithDefaults() *RiskPredictorUserLocationAnomalyAllOf {
	this := RiskPredictorUserLocationAnomalyAllOf{}
	return &this
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *RiskPredictorUserLocationAnomalyAllOf) GetDays() int32 {
	if o == nil || IsNil(o.Days) {
		var ret int32
		return ret
	}
	return *o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskPredictorUserLocationAnomalyAllOf) GetDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.Days) {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *RiskPredictorUserLocationAnomalyAllOf) HasDays() bool {
	if o != nil && !IsNil(o.Days) {
		return true
	}

	return false
}

// SetDays gets a reference to the given int32 and assigns it to the Days field.
func (o *RiskPredictorUserLocationAnomalyAllOf) SetDays(v int32) {
	o.Days = &v
}

// GetRadius returns the Radius field value
func (o *RiskPredictorUserLocationAnomalyAllOf) GetRadius() RiskPredictorUserLocationAnomalyAllOfRadius {
	if o == nil {
		var ret RiskPredictorUserLocationAnomalyAllOfRadius
		return ret
	}

	return o.Radius
}

// GetRadiusOk returns a tuple with the Radius field value
// and a boolean to check if the value has been set.
func (o *RiskPredictorUserLocationAnomalyAllOf) GetRadiusOk() (*RiskPredictorUserLocationAnomalyAllOfRadius, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Radius, true
}

// SetRadius sets field value
func (o *RiskPredictorUserLocationAnomalyAllOf) SetRadius(v RiskPredictorUserLocationAnomalyAllOfRadius) {
	o.Radius = v
}

func (o RiskPredictorUserLocationAnomalyAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RiskPredictorUserLocationAnomalyAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Days) {
		toSerialize["days"] = o.Days
	}
	toSerialize["radius"] = o.Radius
	return toSerialize, nil
}

type NullableRiskPredictorUserLocationAnomalyAllOf struct {
	value *RiskPredictorUserLocationAnomalyAllOf
	isSet bool
}

func (v NullableRiskPredictorUserLocationAnomalyAllOf) Get() *RiskPredictorUserLocationAnomalyAllOf {
	return v.value
}

func (v *NullableRiskPredictorUserLocationAnomalyAllOf) Set(val *RiskPredictorUserLocationAnomalyAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableRiskPredictorUserLocationAnomalyAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableRiskPredictorUserLocationAnomalyAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRiskPredictorUserLocationAnomalyAllOf(val *RiskPredictorUserLocationAnomalyAllOf) *NullableRiskPredictorUserLocationAnomalyAllOf {
	return &NullableRiskPredictorUserLocationAnomalyAllOf{value: val, isSet: true}
}

func (v NullableRiskPredictorUserLocationAnomalyAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRiskPredictorUserLocationAnomalyAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


