/*
PingOne Platform API - PingOne Verify

The PingOne Platform API covering the PingOne Verify service

API version: 2023-05-26
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package verify

import (
	"encoding/json"
)

// checks if the TransactionConfigurationTransactionDataCollection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionConfigurationTransactionDataCollection{}

// TransactionConfigurationTransactionDataCollection struct for TransactionConfigurationTransactionDataCollection
type TransactionConfigurationTransactionDataCollection struct {
	Timeout TransactionConfigurationTransactionDataCollectionTimeout `json:"timeout"`
}

// NewTransactionConfigurationTransactionDataCollection instantiates a new TransactionConfigurationTransactionDataCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionConfigurationTransactionDataCollection(timeout TransactionConfigurationTransactionDataCollectionTimeout) *TransactionConfigurationTransactionDataCollection {
	this := TransactionConfigurationTransactionDataCollection{}
	this.Timeout = timeout
	return &this
}

// NewTransactionConfigurationTransactionDataCollectionWithDefaults instantiates a new TransactionConfigurationTransactionDataCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionConfigurationTransactionDataCollectionWithDefaults() *TransactionConfigurationTransactionDataCollection {
	this := TransactionConfigurationTransactionDataCollection{}
	return &this
}

// GetTimeout returns the Timeout field value
func (o *TransactionConfigurationTransactionDataCollection) GetTimeout() TransactionConfigurationTransactionDataCollectionTimeout {
	if o == nil {
		var ret TransactionConfigurationTransactionDataCollectionTimeout
		return ret
	}

	return o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value
// and a boolean to check if the value has been set.
func (o *TransactionConfigurationTransactionDataCollection) GetTimeoutOk() (*TransactionConfigurationTransactionDataCollectionTimeout, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timeout, true
}

// SetTimeout sets field value
func (o *TransactionConfigurationTransactionDataCollection) SetTimeout(v TransactionConfigurationTransactionDataCollectionTimeout) {
	o.Timeout = v
}

func (o TransactionConfigurationTransactionDataCollection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionConfigurationTransactionDataCollection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["timeout"] = o.Timeout
	return toSerialize, nil
}

type NullableTransactionConfigurationTransactionDataCollection struct {
	value *TransactionConfigurationTransactionDataCollection
	isSet bool
}

func (v NullableTransactionConfigurationTransactionDataCollection) Get() *TransactionConfigurationTransactionDataCollection {
	return v.value
}

func (v *NullableTransactionConfigurationTransactionDataCollection) Set(val *TransactionConfigurationTransactionDataCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionConfigurationTransactionDataCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionConfigurationTransactionDataCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionConfigurationTransactionDataCollection(val *TransactionConfigurationTransactionDataCollection) *NullableTransactionConfigurationTransactionDataCollection {
	return &NullableTransactionConfigurationTransactionDataCollection{value: val, isSet: true}
}

func (v NullableTransactionConfigurationTransactionDataCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionConfigurationTransactionDataCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


