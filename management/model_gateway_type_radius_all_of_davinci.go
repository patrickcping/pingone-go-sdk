/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// GatewayTypeRADIUSAllOfDavinci struct for GatewayTypeRADIUSAllOfDavinci
type GatewayTypeRADIUSAllOfDavinci struct {
	Policy *GatewayTypeRADIUSAllOfDavinciPolicy `json:"policy,omitempty"`
}

// NewGatewayTypeRADIUSAllOfDavinci instantiates a new GatewayTypeRADIUSAllOfDavinci object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayTypeRADIUSAllOfDavinci() *GatewayTypeRADIUSAllOfDavinci {
	this := GatewayTypeRADIUSAllOfDavinci{}
	return &this
}

// NewGatewayTypeRADIUSAllOfDavinciWithDefaults instantiates a new GatewayTypeRADIUSAllOfDavinci object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayTypeRADIUSAllOfDavinciWithDefaults() *GatewayTypeRADIUSAllOfDavinci {
	this := GatewayTypeRADIUSAllOfDavinci{}
	return &this
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *GatewayTypeRADIUSAllOfDavinci) GetPolicy() GatewayTypeRADIUSAllOfDavinciPolicy {
	if o == nil || isNil(o.Policy) {
		var ret GatewayTypeRADIUSAllOfDavinciPolicy
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTypeRADIUSAllOfDavinci) GetPolicyOk() (*GatewayTypeRADIUSAllOfDavinciPolicy, bool) {
	if o == nil || isNil(o.Policy) {
    return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *GatewayTypeRADIUSAllOfDavinci) HasPolicy() bool {
	if o != nil && !isNil(o.Policy) {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given GatewayTypeRADIUSAllOfDavinciPolicy and assigns it to the Policy field.
func (o *GatewayTypeRADIUSAllOfDavinci) SetPolicy(v GatewayTypeRADIUSAllOfDavinciPolicy) {
	o.Policy = &v
}

func (o GatewayTypeRADIUSAllOfDavinci) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Policy) {
		toSerialize["policy"] = o.Policy
	}
	return json.Marshal(toSerialize)
}

type NullableGatewayTypeRADIUSAllOfDavinci struct {
	value *GatewayTypeRADIUSAllOfDavinci
	isSet bool
}

func (v NullableGatewayTypeRADIUSAllOfDavinci) Get() *GatewayTypeRADIUSAllOfDavinci {
	return v.value
}

func (v *NullableGatewayTypeRADIUSAllOfDavinci) Set(val *GatewayTypeRADIUSAllOfDavinci) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayTypeRADIUSAllOfDavinci) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayTypeRADIUSAllOfDavinci) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayTypeRADIUSAllOfDavinci(val *GatewayTypeRADIUSAllOfDavinci) *NullableGatewayTypeRADIUSAllOfDavinci {
	return &NullableGatewayTypeRADIUSAllOfDavinci{value: val, isSet: true}
}

func (v NullableGatewayTypeRADIUSAllOfDavinci) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayTypeRADIUSAllOfDavinci) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


