/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-08-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// checks if the NotificationsSettingsEmailDeliverySettingsFrom type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotificationsSettingsEmailDeliverySettingsFrom{}

// NotificationsSettingsEmailDeliverySettingsFrom struct for NotificationsSettingsEmailDeliverySettingsFrom
type NotificationsSettingsEmailDeliverySettingsFrom struct {
	// A string that specifies the email's \"from\" name.
	Name *string `json:"name,omitempty"`
	// A string that specifies the email's \"from\" address.
	Address string `json:"address"`
}

// NewNotificationsSettingsEmailDeliverySettingsFrom instantiates a new NotificationsSettingsEmailDeliverySettingsFrom object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationsSettingsEmailDeliverySettingsFrom(address string) *NotificationsSettingsEmailDeliverySettingsFrom {
	this := NotificationsSettingsEmailDeliverySettingsFrom{}
	this.Address = address
	return &this
}

// NewNotificationsSettingsEmailDeliverySettingsFromWithDefaults instantiates a new NotificationsSettingsEmailDeliverySettingsFrom object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationsSettingsEmailDeliverySettingsFromWithDefaults() *NotificationsSettingsEmailDeliverySettingsFrom {
	this := NotificationsSettingsEmailDeliverySettingsFrom{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NotificationsSettingsEmailDeliverySettingsFrom) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationsSettingsEmailDeliverySettingsFrom) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NotificationsSettingsEmailDeliverySettingsFrom) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NotificationsSettingsEmailDeliverySettingsFrom) SetName(v string) {
	o.Name = &v
}

// GetAddress returns the Address field value
func (o *NotificationsSettingsEmailDeliverySettingsFrom) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *NotificationsSettingsEmailDeliverySettingsFrom) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *NotificationsSettingsEmailDeliverySettingsFrom) SetAddress(v string) {
	o.Address = v
}

func (o NotificationsSettingsEmailDeliverySettingsFrom) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotificationsSettingsEmailDeliverySettingsFrom) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["address"] = o.Address
	return toSerialize, nil
}

type NullableNotificationsSettingsEmailDeliverySettingsFrom struct {
	value *NotificationsSettingsEmailDeliverySettingsFrom
	isSet bool
}

func (v NullableNotificationsSettingsEmailDeliverySettingsFrom) Get() *NotificationsSettingsEmailDeliverySettingsFrom {
	return v.value
}

func (v *NullableNotificationsSettingsEmailDeliverySettingsFrom) Set(val *NotificationsSettingsEmailDeliverySettingsFrom) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationsSettingsEmailDeliverySettingsFrom) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationsSettingsEmailDeliverySettingsFrom) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationsSettingsEmailDeliverySettingsFrom(val *NotificationsSettingsEmailDeliverySettingsFrom) *NullableNotificationsSettingsEmailDeliverySettingsFrom {
	return &NullableNotificationsSettingsEmailDeliverySettingsFrom{value: val, isSet: true}
}

func (v NullableNotificationsSettingsEmailDeliverySettingsFrom) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationsSettingsEmailDeliverySettingsFrom) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


