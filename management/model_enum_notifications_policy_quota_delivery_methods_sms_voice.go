/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"fmt"
)

// EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice the model 'EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice'
type EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice string

// List of EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice
const (
	ENUMNOTIFICATIONSPOLICYQUOTADELIVERYMETHODSSMSVOICE_SMS EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice = "SMS"
	ENUMNOTIFICATIONSPOLICYQUOTADELIVERYMETHODSSMSVOICE_VOICE EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice = "Voice"
)

// All allowed values of EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice enum
var AllowedEnumNotificationsPolicyQuotaDeliveryMethodsSMSVoiceEnumValues = []EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice{
	"SMS",
	"Voice",
}

func (v *EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice(value)
	for _, existing := range AllowedEnumNotificationsPolicyQuotaDeliveryMethodsSMSVoiceEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice(fmt.Sprintf("%s", "UNKNOWN"))
	return nil
}

// NewEnumNotificationsPolicyQuotaDeliveryMethodsSMSVoiceFromValue returns a pointer to a valid EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumNotificationsPolicyQuotaDeliveryMethodsSMSVoiceFromValue(v string) (*EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice, error) {
	ev := EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice: valid values are %v", v, AllowedEnumNotificationsPolicyQuotaDeliveryMethodsSMSVoiceEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice) IsValid() bool {
	for _, existing := range AllowedEnumNotificationsPolicyQuotaDeliveryMethodsSMSVoiceEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice value
func (v EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice) Ptr() *EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice {
	return &v
}

type NullableEnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice struct {
	value *EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice
	isSet bool
}

func (v NullableEnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice) Get() *EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice {
	return v.value
}

func (v *NullableEnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice) Set(val *EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice(val *EnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice) *NullableEnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice {
	return &NullableEnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice{value: val, isSet: true}
}

func (v NullableEnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumNotificationsPolicyQuotaDeliveryMethodsSMSVoice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

