/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-07-18
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// SignOnPolicyActionAgreement struct for SignOnPolicyActionAgreement
type SignOnPolicyActionAgreement struct {
	Agreement SignOnPolicyActionAgreementAgreement `json:"agreement"`
}

// NewSignOnPolicyActionAgreement instantiates a new SignOnPolicyActionAgreement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignOnPolicyActionAgreement(agreement SignOnPolicyActionAgreementAgreement) *SignOnPolicyActionAgreement {
	this := SignOnPolicyActionAgreement{}
	this.Agreement = agreement
	return &this
}

// NewSignOnPolicyActionAgreementWithDefaults instantiates a new SignOnPolicyActionAgreement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignOnPolicyActionAgreementWithDefaults() *SignOnPolicyActionAgreement {
	this := SignOnPolicyActionAgreement{}
	return &this
}

// GetAgreement returns the Agreement field value
func (o *SignOnPolicyActionAgreement) GetAgreement() SignOnPolicyActionAgreementAgreement {
	if o == nil {
		var ret SignOnPolicyActionAgreementAgreement
		return ret
	}

	return o.Agreement
}

// GetAgreementOk returns a tuple with the Agreement field value
// and a boolean to check if the value has been set.
func (o *SignOnPolicyActionAgreement) GetAgreementOk() (*SignOnPolicyActionAgreementAgreement, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Agreement, true
}

// SetAgreement sets field value
func (o *SignOnPolicyActionAgreement) SetAgreement(v SignOnPolicyActionAgreementAgreement) {
	o.Agreement = v
}

func (o SignOnPolicyActionAgreement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["agreement"] = o.Agreement
	}
	return json.Marshal(toSerialize)
}

type NullableSignOnPolicyActionAgreement struct {
	value *SignOnPolicyActionAgreement
	isSet bool
}

func (v NullableSignOnPolicyActionAgreement) Get() *SignOnPolicyActionAgreement {
	return v.value
}

func (v *NullableSignOnPolicyActionAgreement) Set(val *SignOnPolicyActionAgreement) {
	v.value = val
	v.isSet = true
}

func (v NullableSignOnPolicyActionAgreement) IsSet() bool {
	return v.isSet
}

func (v *NullableSignOnPolicyActionAgreement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignOnPolicyActionAgreement(val *SignOnPolicyActionAgreement) *NullableSignOnPolicyActionAgreement {
	return &NullableSignOnPolicyActionAgreement{value: val, isSet: true}
}

func (v NullableSignOnPolicyActionAgreement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignOnPolicyActionAgreement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


