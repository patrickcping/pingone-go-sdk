/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// SignOnPolicyActionMFA struct for SignOnPolicyActionMFA
type SignOnPolicyActionMFA struct {
	Authenticator *SignOnPolicyActionMFAAuthenticator `json:"authenticator,omitempty"`
	BoundBiometrics *SignOnPolicyActionMFABoundBiometrics `json:"boundBiometrics,omitempty"`
	Email *SignOnPolicyActionMFAEmail `json:"email,omitempty"`
	SecurityKey *SignOnPolicyActionMFASecurityKey `json:"securityKey,omitempty"`
	Sms *SignOnPolicyActionMFASms `json:"sms,omitempty"`
	Voice *SignOnPolicyActionMFAVoice `json:"voice,omitempty"`
	// The applications collection specifies all the native native applications that are allowed in the sign-on policy action.  If the applications collection is empty, a push notification is not allowed for the action.
	Applications []SignOnPolicyActionMFAApplicationsInner `json:"applications,omitempty"`
	NoDeviceMode *EnumSignOnPolicyNoDeviceMode `json:"noDeviceMode,omitempty"`
}

// NewSignOnPolicyActionMFA instantiates a new SignOnPolicyActionMFA object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignOnPolicyActionMFA() *SignOnPolicyActionMFA {
	this := SignOnPolicyActionMFA{}
	return &this
}

// NewSignOnPolicyActionMFAWithDefaults instantiates a new SignOnPolicyActionMFA object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignOnPolicyActionMFAWithDefaults() *SignOnPolicyActionMFA {
	this := SignOnPolicyActionMFA{}
	return &this
}

// GetAuthenticator returns the Authenticator field value if set, zero value otherwise.
func (o *SignOnPolicyActionMFA) GetAuthenticator() SignOnPolicyActionMFAAuthenticator {
	if o == nil || o.Authenticator == nil {
		var ret SignOnPolicyActionMFAAuthenticator
		return ret
	}
	return *o.Authenticator
}

// GetAuthenticatorOk returns a tuple with the Authenticator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignOnPolicyActionMFA) GetAuthenticatorOk() (*SignOnPolicyActionMFAAuthenticator, bool) {
	if o == nil || o.Authenticator == nil {
		return nil, false
	}
	return o.Authenticator, true
}

// HasAuthenticator returns a boolean if a field has been set.
func (o *SignOnPolicyActionMFA) HasAuthenticator() bool {
	if o != nil && o.Authenticator != nil {
		return true
	}

	return false
}

// SetAuthenticator gets a reference to the given SignOnPolicyActionMFAAuthenticator and assigns it to the Authenticator field.
func (o *SignOnPolicyActionMFA) SetAuthenticator(v SignOnPolicyActionMFAAuthenticator) {
	o.Authenticator = &v
}

// GetBoundBiometrics returns the BoundBiometrics field value if set, zero value otherwise.
func (o *SignOnPolicyActionMFA) GetBoundBiometrics() SignOnPolicyActionMFABoundBiometrics {
	if o == nil || o.BoundBiometrics == nil {
		var ret SignOnPolicyActionMFABoundBiometrics
		return ret
	}
	return *o.BoundBiometrics
}

// GetBoundBiometricsOk returns a tuple with the BoundBiometrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignOnPolicyActionMFA) GetBoundBiometricsOk() (*SignOnPolicyActionMFABoundBiometrics, bool) {
	if o == nil || o.BoundBiometrics == nil {
		return nil, false
	}
	return o.BoundBiometrics, true
}

// HasBoundBiometrics returns a boolean if a field has been set.
func (o *SignOnPolicyActionMFA) HasBoundBiometrics() bool {
	if o != nil && o.BoundBiometrics != nil {
		return true
	}

	return false
}

// SetBoundBiometrics gets a reference to the given SignOnPolicyActionMFABoundBiometrics and assigns it to the BoundBiometrics field.
func (o *SignOnPolicyActionMFA) SetBoundBiometrics(v SignOnPolicyActionMFABoundBiometrics) {
	o.BoundBiometrics = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *SignOnPolicyActionMFA) GetEmail() SignOnPolicyActionMFAEmail {
	if o == nil || o.Email == nil {
		var ret SignOnPolicyActionMFAEmail
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignOnPolicyActionMFA) GetEmailOk() (*SignOnPolicyActionMFAEmail, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *SignOnPolicyActionMFA) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given SignOnPolicyActionMFAEmail and assigns it to the Email field.
func (o *SignOnPolicyActionMFA) SetEmail(v SignOnPolicyActionMFAEmail) {
	o.Email = &v
}

// GetSecurityKey returns the SecurityKey field value if set, zero value otherwise.
func (o *SignOnPolicyActionMFA) GetSecurityKey() SignOnPolicyActionMFASecurityKey {
	if o == nil || o.SecurityKey == nil {
		var ret SignOnPolicyActionMFASecurityKey
		return ret
	}
	return *o.SecurityKey
}

// GetSecurityKeyOk returns a tuple with the SecurityKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignOnPolicyActionMFA) GetSecurityKeyOk() (*SignOnPolicyActionMFASecurityKey, bool) {
	if o == nil || o.SecurityKey == nil {
		return nil, false
	}
	return o.SecurityKey, true
}

// HasSecurityKey returns a boolean if a field has been set.
func (o *SignOnPolicyActionMFA) HasSecurityKey() bool {
	if o != nil && o.SecurityKey != nil {
		return true
	}

	return false
}

// SetSecurityKey gets a reference to the given SignOnPolicyActionMFASecurityKey and assigns it to the SecurityKey field.
func (o *SignOnPolicyActionMFA) SetSecurityKey(v SignOnPolicyActionMFASecurityKey) {
	o.SecurityKey = &v
}

// GetSms returns the Sms field value if set, zero value otherwise.
func (o *SignOnPolicyActionMFA) GetSms() SignOnPolicyActionMFASms {
	if o == nil || o.Sms == nil {
		var ret SignOnPolicyActionMFASms
		return ret
	}
	return *o.Sms
}

// GetSmsOk returns a tuple with the Sms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignOnPolicyActionMFA) GetSmsOk() (*SignOnPolicyActionMFASms, bool) {
	if o == nil || o.Sms == nil {
		return nil, false
	}
	return o.Sms, true
}

// HasSms returns a boolean if a field has been set.
func (o *SignOnPolicyActionMFA) HasSms() bool {
	if o != nil && o.Sms != nil {
		return true
	}

	return false
}

// SetSms gets a reference to the given SignOnPolicyActionMFASms and assigns it to the Sms field.
func (o *SignOnPolicyActionMFA) SetSms(v SignOnPolicyActionMFASms) {
	o.Sms = &v
}

// GetVoice returns the Voice field value if set, zero value otherwise.
func (o *SignOnPolicyActionMFA) GetVoice() SignOnPolicyActionMFAVoice {
	if o == nil || o.Voice == nil {
		var ret SignOnPolicyActionMFAVoice
		return ret
	}
	return *o.Voice
}

// GetVoiceOk returns a tuple with the Voice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignOnPolicyActionMFA) GetVoiceOk() (*SignOnPolicyActionMFAVoice, bool) {
	if o == nil || o.Voice == nil {
		return nil, false
	}
	return o.Voice, true
}

// HasVoice returns a boolean if a field has been set.
func (o *SignOnPolicyActionMFA) HasVoice() bool {
	if o != nil && o.Voice != nil {
		return true
	}

	return false
}

// SetVoice gets a reference to the given SignOnPolicyActionMFAVoice and assigns it to the Voice field.
func (o *SignOnPolicyActionMFA) SetVoice(v SignOnPolicyActionMFAVoice) {
	o.Voice = &v
}

// GetApplications returns the Applications field value if set, zero value otherwise.
func (o *SignOnPolicyActionMFA) GetApplications() []SignOnPolicyActionMFAApplicationsInner {
	if o == nil || o.Applications == nil {
		var ret []SignOnPolicyActionMFAApplicationsInner
		return ret
	}
	return o.Applications
}

// GetApplicationsOk returns a tuple with the Applications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignOnPolicyActionMFA) GetApplicationsOk() ([]SignOnPolicyActionMFAApplicationsInner, bool) {
	if o == nil || o.Applications == nil {
		return nil, false
	}
	return o.Applications, true
}

// HasApplications returns a boolean if a field has been set.
func (o *SignOnPolicyActionMFA) HasApplications() bool {
	if o != nil && o.Applications != nil {
		return true
	}

	return false
}

// SetApplications gets a reference to the given []SignOnPolicyActionMFAApplicationsInner and assigns it to the Applications field.
func (o *SignOnPolicyActionMFA) SetApplications(v []SignOnPolicyActionMFAApplicationsInner) {
	o.Applications = v
}

// GetNoDeviceMode returns the NoDeviceMode field value if set, zero value otherwise.
func (o *SignOnPolicyActionMFA) GetNoDeviceMode() EnumSignOnPolicyNoDeviceMode {
	if o == nil || o.NoDeviceMode == nil {
		var ret EnumSignOnPolicyNoDeviceMode
		return ret
	}
	return *o.NoDeviceMode
}

// GetNoDeviceModeOk returns a tuple with the NoDeviceMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignOnPolicyActionMFA) GetNoDeviceModeOk() (*EnumSignOnPolicyNoDeviceMode, bool) {
	if o == nil || o.NoDeviceMode == nil {
		return nil, false
	}
	return o.NoDeviceMode, true
}

// HasNoDeviceMode returns a boolean if a field has been set.
func (o *SignOnPolicyActionMFA) HasNoDeviceMode() bool {
	if o != nil && o.NoDeviceMode != nil {
		return true
	}

	return false
}

// SetNoDeviceMode gets a reference to the given EnumSignOnPolicyNoDeviceMode and assigns it to the NoDeviceMode field.
func (o *SignOnPolicyActionMFA) SetNoDeviceMode(v EnumSignOnPolicyNoDeviceMode) {
	o.NoDeviceMode = &v
}

func (o SignOnPolicyActionMFA) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Authenticator != nil {
		toSerialize["authenticator"] = o.Authenticator
	}
	if o.BoundBiometrics != nil {
		toSerialize["boundBiometrics"] = o.BoundBiometrics
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.SecurityKey != nil {
		toSerialize["securityKey"] = o.SecurityKey
	}
	if o.Sms != nil {
		toSerialize["sms"] = o.Sms
	}
	if o.Voice != nil {
		toSerialize["voice"] = o.Voice
	}
	if o.Applications != nil {
		toSerialize["applications"] = o.Applications
	}
	if o.NoDeviceMode != nil {
		toSerialize["noDeviceMode"] = o.NoDeviceMode
	}
	return json.Marshal(toSerialize)
}

type NullableSignOnPolicyActionMFA struct {
	value *SignOnPolicyActionMFA
	isSet bool
}

func (v NullableSignOnPolicyActionMFA) Get() *SignOnPolicyActionMFA {
	return v.value
}

func (v *NullableSignOnPolicyActionMFA) Set(val *SignOnPolicyActionMFA) {
	v.value = val
	v.isSet = true
}

func (v NullableSignOnPolicyActionMFA) IsSet() bool {
	return v.isSet
}

func (v *NullableSignOnPolicyActionMFA) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignOnPolicyActionMFA(val *SignOnPolicyActionMFA) *NullableSignOnPolicyActionMFA {
	return &NullableSignOnPolicyActionMFA{value: val, isSet: true}
}

func (v NullableSignOnPolicyActionMFA) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignOnPolicyActionMFA) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


