/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-07-18
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// GatewaySupportedVersions An array that lists the LDAP gateway versions associated with this gateway resource. This information is returned on a GET {{apiPath}}/environments/{{environmentID}}/gateways request, and it is used to trigger alerts if the gateway tries to connect with an unsupported version (or a version that is not the latest or recommended version).
type GatewaySupportedVersions struct {
	// A string that specifies the gateway version number.
	Version *string `json:"version,omitempty"`
	// A string that identifies the gateway image path.
	Image *string `json:"image,omitempty"`
	// A boolean that specifies whether this is the recommended LDAP gateway version.
	Recommended *bool `json:"recommended,omitempty"`
	// A boolean that specifies whether this is the latest LDAP gateway version.
	Latest *bool `json:"latest,omitempty"`
}

// NewGatewaySupportedVersions instantiates a new GatewaySupportedVersions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewaySupportedVersions() *GatewaySupportedVersions {
	this := GatewaySupportedVersions{}
	return &this
}

// NewGatewaySupportedVersionsWithDefaults instantiates a new GatewaySupportedVersions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewaySupportedVersionsWithDefaults() *GatewaySupportedVersions {
	this := GatewaySupportedVersions{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *GatewaySupportedVersions) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewaySupportedVersions) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *GatewaySupportedVersions) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *GatewaySupportedVersions) SetVersion(v string) {
	o.Version = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *GatewaySupportedVersions) GetImage() string {
	if o == nil || o.Image == nil {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewaySupportedVersions) GetImageOk() (*string, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *GatewaySupportedVersions) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *GatewaySupportedVersions) SetImage(v string) {
	o.Image = &v
}

// GetRecommended returns the Recommended field value if set, zero value otherwise.
func (o *GatewaySupportedVersions) GetRecommended() bool {
	if o == nil || o.Recommended == nil {
		var ret bool
		return ret
	}
	return *o.Recommended
}

// GetRecommendedOk returns a tuple with the Recommended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewaySupportedVersions) GetRecommendedOk() (*bool, bool) {
	if o == nil || o.Recommended == nil {
		return nil, false
	}
	return o.Recommended, true
}

// HasRecommended returns a boolean if a field has been set.
func (o *GatewaySupportedVersions) HasRecommended() bool {
	if o != nil && o.Recommended != nil {
		return true
	}

	return false
}

// SetRecommended gets a reference to the given bool and assigns it to the Recommended field.
func (o *GatewaySupportedVersions) SetRecommended(v bool) {
	o.Recommended = &v
}

// GetLatest returns the Latest field value if set, zero value otherwise.
func (o *GatewaySupportedVersions) GetLatest() bool {
	if o == nil || o.Latest == nil {
		var ret bool
		return ret
	}
	return *o.Latest
}

// GetLatestOk returns a tuple with the Latest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewaySupportedVersions) GetLatestOk() (*bool, bool) {
	if o == nil || o.Latest == nil {
		return nil, false
	}
	return o.Latest, true
}

// HasLatest returns a boolean if a field has been set.
func (o *GatewaySupportedVersions) HasLatest() bool {
	if o != nil && o.Latest != nil {
		return true
	}

	return false
}

// SetLatest gets a reference to the given bool and assigns it to the Latest field.
func (o *GatewaySupportedVersions) SetLatest(v bool) {
	o.Latest = &v
}

func (o GatewaySupportedVersions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if o.Recommended != nil {
		toSerialize["recommended"] = o.Recommended
	}
	if o.Latest != nil {
		toSerialize["latest"] = o.Latest
	}
	return json.Marshal(toSerialize)
}

type NullableGatewaySupportedVersions struct {
	value *GatewaySupportedVersions
	isSet bool
}

func (v NullableGatewaySupportedVersions) Get() *GatewaySupportedVersions {
	return v.value
}

func (v *NullableGatewaySupportedVersions) Set(val *GatewaySupportedVersions) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewaySupportedVersions) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewaySupportedVersions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewaySupportedVersions(val *GatewaySupportedVersions) *NullableGatewaySupportedVersions {
	return &NullableGatewaySupportedVersions{value: val, isSet: true}
}

func (v NullableGatewaySupportedVersions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewaySupportedVersions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


