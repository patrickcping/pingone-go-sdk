/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2023-06-29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"fmt"
)

// checks if the NotificationsSettingsRestrictionsSmsVoiceQuota type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotificationsSettingsRestrictionsSmsVoiceQuota{}

// NotificationsSettingsRestrictionsSmsVoiceQuota struct for NotificationsSettingsRestrictionsSmsVoiceQuota
type NotificationsSettingsRestrictionsSmsVoiceQuota struct {
	// The maximum number of SMS and voice notifications that can be sent per user per day. - `restrictions.smsVoiceQuota.daily` can be set to any value between 0 and 50. - Trial accounts have a default value of 30. - The daily counters are reset every night at midnight UTC. 
	Daily int32 `json:"daily"`
}

type _NotificationsSettingsRestrictionsSmsVoiceQuota NotificationsSettingsRestrictionsSmsVoiceQuota

// NewNotificationsSettingsRestrictionsSmsVoiceQuota instantiates a new NotificationsSettingsRestrictionsSmsVoiceQuota object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationsSettingsRestrictionsSmsVoiceQuota(daily int32) *NotificationsSettingsRestrictionsSmsVoiceQuota {
	this := NotificationsSettingsRestrictionsSmsVoiceQuota{}
	this.Daily = daily
	return &this
}

// NewNotificationsSettingsRestrictionsSmsVoiceQuotaWithDefaults instantiates a new NotificationsSettingsRestrictionsSmsVoiceQuota object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationsSettingsRestrictionsSmsVoiceQuotaWithDefaults() *NotificationsSettingsRestrictionsSmsVoiceQuota {
	this := NotificationsSettingsRestrictionsSmsVoiceQuota{}
	return &this
}

// GetDaily returns the Daily field value
func (o *NotificationsSettingsRestrictionsSmsVoiceQuota) GetDaily() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Daily
}

// GetDailyOk returns a tuple with the Daily field value
// and a boolean to check if the value has been set.
func (o *NotificationsSettingsRestrictionsSmsVoiceQuota) GetDailyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Daily, true
}

// SetDaily sets field value
func (o *NotificationsSettingsRestrictionsSmsVoiceQuota) SetDaily(v int32) {
	o.Daily = v
}

func (o NotificationsSettingsRestrictionsSmsVoiceQuota) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotificationsSettingsRestrictionsSmsVoiceQuota) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["daily"] = o.Daily
	return toSerialize, nil
}

func (o *NotificationsSettingsRestrictionsSmsVoiceQuota) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"daily",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNotificationsSettingsRestrictionsSmsVoiceQuota := _NotificationsSettingsRestrictionsSmsVoiceQuota{}

	err = json.Unmarshal(bytes, &varNotificationsSettingsRestrictionsSmsVoiceQuota)

	if err != nil {
		return err
	}

	*o = NotificationsSettingsRestrictionsSmsVoiceQuota(varNotificationsSettingsRestrictionsSmsVoiceQuota)

	return err
}

type NullableNotificationsSettingsRestrictionsSmsVoiceQuota struct {
	value *NotificationsSettingsRestrictionsSmsVoiceQuota
	isSet bool
}

func (v NullableNotificationsSettingsRestrictionsSmsVoiceQuota) Get() *NotificationsSettingsRestrictionsSmsVoiceQuota {
	return v.value
}

func (v *NullableNotificationsSettingsRestrictionsSmsVoiceQuota) Set(val *NotificationsSettingsRestrictionsSmsVoiceQuota) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationsSettingsRestrictionsSmsVoiceQuota) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationsSettingsRestrictionsSmsVoiceQuota) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationsSettingsRestrictionsSmsVoiceQuota(val *NotificationsSettingsRestrictionsSmsVoiceQuota) *NullableNotificationsSettingsRestrictionsSmsVoiceQuota {
	return &NullableNotificationsSettingsRestrictionsSmsVoiceQuota{value: val, isSet: true}
}

func (v NullableNotificationsSettingsRestrictionsSmsVoiceQuota) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationsSettingsRestrictionsSmsVoiceQuota) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


