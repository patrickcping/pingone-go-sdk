/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 2022-07-18
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// IdentityProviderSAML struct for IdentityProviderSAML
type IdentityProviderSAML struct {
	// The description of the IdP.
	Description *string `json:"description,omitempty"`
	Enabled EnumEnabledStatus `json:"enabled"`
	Environment *ObjectEnvironment `json:"environment,omitempty"`
	Icon *IdentityProviderCommonIcon `json:"icon,omitempty"`
	// The resource ID.
	Id *string `json:"id,omitempty"`
	LoginButtonIcon *IdentityProviderCommonLoginButtonIcon `json:"loginButtonIcon,omitempty"`
	// The name of the IdP.
	Name string `json:"name"`
	Registration *IdentityProviderCommonRegistration `json:"registration,omitempty"`
	Type EnumIdentityProviderExt `json:"type"`
	// A boolean that specifies whether the SAML authentication request will be signed when sending to the identity provider. Set this to true if the external IDP is included in an authentication policy to be used by applications that are accessed using a mix of default URLS and custom Domains URLs.
	AuthnRequestSigned *bool `json:"authnRequestSigned,omitempty"`
	// A string that specifies the entity ID URI that is checked against the issuerId tag in the incoming response.
	IdpEntityId *string `json:"idpEntityId,omitempty"`
	IdpVerification *IdentityProviderSAMLAllOfIdpVerification `json:"idpVerification,omitempty"`
	// A string that specifies the service provider's entity ID, used to look up the application.
	SpEntityId *string `json:"spEntityId,omitempty"`
	SpSigning *IdentityProviderSAMLAllOfSpSigning `json:"spSigning,omitempty"`
	SsoBinding *EnumIdentityProviderSAMLSSOBinding `json:"ssoBinding,omitempty"`
	// A string that specifies the SSO endpoint for the authentication request.
	SsoEndpoint *string `json:"ssoEndpoint,omitempty"`
}

// NewIdentityProviderSAML instantiates a new IdentityProviderSAML object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityProviderSAML(enabled EnumEnabledStatus, name string, type_ EnumIdentityProviderExt) *IdentityProviderSAML {
	this := IdentityProviderSAML{}
	this.Enabled = enabled
	this.Name = name
	this.Type = type_
	return &this
}

// NewIdentityProviderSAMLWithDefaults instantiates a new IdentityProviderSAML object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityProviderSAMLWithDefaults() *IdentityProviderSAML {
	this := IdentityProviderSAML{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *IdentityProviderSAML) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *IdentityProviderSAML) GetEnabled() EnumEnabledStatus {
	if o == nil {
		var ret EnumEnabledStatus
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetEnabledOk() (*EnumEnabledStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *IdentityProviderSAML) SetEnabled(v EnumEnabledStatus) {
	o.Enabled = v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetEnvironment() ObjectEnvironment {
	if o == nil || o.Environment == nil {
		var ret ObjectEnvironment
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetEnvironmentOk() (*ObjectEnvironment, bool) {
	if o == nil || o.Environment == nil {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasEnvironment() bool {
	if o != nil && o.Environment != nil {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given ObjectEnvironment and assigns it to the Environment field.
func (o *IdentityProviderSAML) SetEnvironment(v ObjectEnvironment) {
	o.Environment = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetIcon() IdentityProviderCommonIcon {
	if o == nil || o.Icon == nil {
		var ret IdentityProviderCommonIcon
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetIconOk() (*IdentityProviderCommonIcon, bool) {
	if o == nil || o.Icon == nil {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasIcon() bool {
	if o != nil && o.Icon != nil {
		return true
	}

	return false
}

// SetIcon gets a reference to the given IdentityProviderCommonIcon and assigns it to the Icon field.
func (o *IdentityProviderSAML) SetIcon(v IdentityProviderCommonIcon) {
	o.Icon = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IdentityProviderSAML) SetId(v string) {
	o.Id = &v
}

// GetLoginButtonIcon returns the LoginButtonIcon field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetLoginButtonIcon() IdentityProviderCommonLoginButtonIcon {
	if o == nil || o.LoginButtonIcon == nil {
		var ret IdentityProviderCommonLoginButtonIcon
		return ret
	}
	return *o.LoginButtonIcon
}

// GetLoginButtonIconOk returns a tuple with the LoginButtonIcon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetLoginButtonIconOk() (*IdentityProviderCommonLoginButtonIcon, bool) {
	if o == nil || o.LoginButtonIcon == nil {
		return nil, false
	}
	return o.LoginButtonIcon, true
}

// HasLoginButtonIcon returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasLoginButtonIcon() bool {
	if o != nil && o.LoginButtonIcon != nil {
		return true
	}

	return false
}

// SetLoginButtonIcon gets a reference to the given IdentityProviderCommonLoginButtonIcon and assigns it to the LoginButtonIcon field.
func (o *IdentityProviderSAML) SetLoginButtonIcon(v IdentityProviderCommonLoginButtonIcon) {
	o.LoginButtonIcon = &v
}

// GetName returns the Name field value
func (o *IdentityProviderSAML) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IdentityProviderSAML) SetName(v string) {
	o.Name = v
}

// GetRegistration returns the Registration field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetRegistration() IdentityProviderCommonRegistration {
	if o == nil || o.Registration == nil {
		var ret IdentityProviderCommonRegistration
		return ret
	}
	return *o.Registration
}

// GetRegistrationOk returns a tuple with the Registration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetRegistrationOk() (*IdentityProviderCommonRegistration, bool) {
	if o == nil || o.Registration == nil {
		return nil, false
	}
	return o.Registration, true
}

// HasRegistration returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasRegistration() bool {
	if o != nil && o.Registration != nil {
		return true
	}

	return false
}

// SetRegistration gets a reference to the given IdentityProviderCommonRegistration and assigns it to the Registration field.
func (o *IdentityProviderSAML) SetRegistration(v IdentityProviderCommonRegistration) {
	o.Registration = &v
}

// GetType returns the Type field value
func (o *IdentityProviderSAML) GetType() EnumIdentityProviderExt {
	if o == nil {
		var ret EnumIdentityProviderExt
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetTypeOk() (*EnumIdentityProviderExt, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *IdentityProviderSAML) SetType(v EnumIdentityProviderExt) {
	o.Type = v
}

// GetAuthnRequestSigned returns the AuthnRequestSigned field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetAuthnRequestSigned() bool {
	if o == nil || o.AuthnRequestSigned == nil {
		var ret bool
		return ret
	}
	return *o.AuthnRequestSigned
}

// GetAuthnRequestSignedOk returns a tuple with the AuthnRequestSigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetAuthnRequestSignedOk() (*bool, bool) {
	if o == nil || o.AuthnRequestSigned == nil {
		return nil, false
	}
	return o.AuthnRequestSigned, true
}

// HasAuthnRequestSigned returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasAuthnRequestSigned() bool {
	if o != nil && o.AuthnRequestSigned != nil {
		return true
	}

	return false
}

// SetAuthnRequestSigned gets a reference to the given bool and assigns it to the AuthnRequestSigned field.
func (o *IdentityProviderSAML) SetAuthnRequestSigned(v bool) {
	o.AuthnRequestSigned = &v
}

// GetIdpEntityId returns the IdpEntityId field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetIdpEntityId() string {
	if o == nil || o.IdpEntityId == nil {
		var ret string
		return ret
	}
	return *o.IdpEntityId
}

// GetIdpEntityIdOk returns a tuple with the IdpEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetIdpEntityIdOk() (*string, bool) {
	if o == nil || o.IdpEntityId == nil {
		return nil, false
	}
	return o.IdpEntityId, true
}

// HasIdpEntityId returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasIdpEntityId() bool {
	if o != nil && o.IdpEntityId != nil {
		return true
	}

	return false
}

// SetIdpEntityId gets a reference to the given string and assigns it to the IdpEntityId field.
func (o *IdentityProviderSAML) SetIdpEntityId(v string) {
	o.IdpEntityId = &v
}

// GetIdpVerification returns the IdpVerification field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetIdpVerification() IdentityProviderSAMLAllOfIdpVerification {
	if o == nil || o.IdpVerification == nil {
		var ret IdentityProviderSAMLAllOfIdpVerification
		return ret
	}
	return *o.IdpVerification
}

// GetIdpVerificationOk returns a tuple with the IdpVerification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetIdpVerificationOk() (*IdentityProviderSAMLAllOfIdpVerification, bool) {
	if o == nil || o.IdpVerification == nil {
		return nil, false
	}
	return o.IdpVerification, true
}

// HasIdpVerification returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasIdpVerification() bool {
	if o != nil && o.IdpVerification != nil {
		return true
	}

	return false
}

// SetIdpVerification gets a reference to the given IdentityProviderSAMLAllOfIdpVerification and assigns it to the IdpVerification field.
func (o *IdentityProviderSAML) SetIdpVerification(v IdentityProviderSAMLAllOfIdpVerification) {
	o.IdpVerification = &v
}

// GetSpEntityId returns the SpEntityId field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetSpEntityId() string {
	if o == nil || o.SpEntityId == nil {
		var ret string
		return ret
	}
	return *o.SpEntityId
}

// GetSpEntityIdOk returns a tuple with the SpEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetSpEntityIdOk() (*string, bool) {
	if o == nil || o.SpEntityId == nil {
		return nil, false
	}
	return o.SpEntityId, true
}

// HasSpEntityId returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasSpEntityId() bool {
	if o != nil && o.SpEntityId != nil {
		return true
	}

	return false
}

// SetSpEntityId gets a reference to the given string and assigns it to the SpEntityId field.
func (o *IdentityProviderSAML) SetSpEntityId(v string) {
	o.SpEntityId = &v
}

// GetSpSigning returns the SpSigning field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetSpSigning() IdentityProviderSAMLAllOfSpSigning {
	if o == nil || o.SpSigning == nil {
		var ret IdentityProviderSAMLAllOfSpSigning
		return ret
	}
	return *o.SpSigning
}

// GetSpSigningOk returns a tuple with the SpSigning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetSpSigningOk() (*IdentityProviderSAMLAllOfSpSigning, bool) {
	if o == nil || o.SpSigning == nil {
		return nil, false
	}
	return o.SpSigning, true
}

// HasSpSigning returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasSpSigning() bool {
	if o != nil && o.SpSigning != nil {
		return true
	}

	return false
}

// SetSpSigning gets a reference to the given IdentityProviderSAMLAllOfSpSigning and assigns it to the SpSigning field.
func (o *IdentityProviderSAML) SetSpSigning(v IdentityProviderSAMLAllOfSpSigning) {
	o.SpSigning = &v
}

// GetSsoBinding returns the SsoBinding field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetSsoBinding() EnumIdentityProviderSAMLSSOBinding {
	if o == nil || o.SsoBinding == nil {
		var ret EnumIdentityProviderSAMLSSOBinding
		return ret
	}
	return *o.SsoBinding
}

// GetSsoBindingOk returns a tuple with the SsoBinding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetSsoBindingOk() (*EnumIdentityProviderSAMLSSOBinding, bool) {
	if o == nil || o.SsoBinding == nil {
		return nil, false
	}
	return o.SsoBinding, true
}

// HasSsoBinding returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasSsoBinding() bool {
	if o != nil && o.SsoBinding != nil {
		return true
	}

	return false
}

// SetSsoBinding gets a reference to the given EnumIdentityProviderSAMLSSOBinding and assigns it to the SsoBinding field.
func (o *IdentityProviderSAML) SetSsoBinding(v EnumIdentityProviderSAMLSSOBinding) {
	o.SsoBinding = &v
}

// GetSsoEndpoint returns the SsoEndpoint field value if set, zero value otherwise.
func (o *IdentityProviderSAML) GetSsoEndpoint() string {
	if o == nil || o.SsoEndpoint == nil {
		var ret string
		return ret
	}
	return *o.SsoEndpoint
}

// GetSsoEndpointOk returns a tuple with the SsoEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderSAML) GetSsoEndpointOk() (*string, bool) {
	if o == nil || o.SsoEndpoint == nil {
		return nil, false
	}
	return o.SsoEndpoint, true
}

// HasSsoEndpoint returns a boolean if a field has been set.
func (o *IdentityProviderSAML) HasSsoEndpoint() bool {
	if o != nil && o.SsoEndpoint != nil {
		return true
	}

	return false
}

// SetSsoEndpoint gets a reference to the given string and assigns it to the SsoEndpoint field.
func (o *IdentityProviderSAML) SetSsoEndpoint(v string) {
	o.SsoEndpoint = &v
}

func (o IdentityProviderSAML) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Environment != nil {
		toSerialize["environment"] = o.Environment
	}
	if o.Icon != nil {
		toSerialize["icon"] = o.Icon
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LoginButtonIcon != nil {
		toSerialize["loginButtonIcon"] = o.LoginButtonIcon
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Registration != nil {
		toSerialize["registration"] = o.Registration
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.AuthnRequestSigned != nil {
		toSerialize["authnRequestSigned"] = o.AuthnRequestSigned
	}
	if o.IdpEntityId != nil {
		toSerialize["idpEntityId"] = o.IdpEntityId
	}
	if o.IdpVerification != nil {
		toSerialize["idpVerification"] = o.IdpVerification
	}
	if o.SpEntityId != nil {
		toSerialize["spEntityId"] = o.SpEntityId
	}
	if o.SpSigning != nil {
		toSerialize["spSigning"] = o.SpSigning
	}
	if o.SsoBinding != nil {
		toSerialize["ssoBinding"] = o.SsoBinding
	}
	if o.SsoEndpoint != nil {
		toSerialize["ssoEndpoint"] = o.SsoEndpoint
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityProviderSAML struct {
	value *IdentityProviderSAML
	isSet bool
}

func (v NullableIdentityProviderSAML) Get() *IdentityProviderSAML {
	return v.value
}

func (v *NullableIdentityProviderSAML) Set(val *IdentityProviderSAML) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityProviderSAML) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityProviderSAML) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityProviderSAML(val *IdentityProviderSAML) *NullableIdentityProviderSAML {
	return &NullableIdentityProviderSAML{value: val, isSet: true}
}

func (v NullableIdentityProviderSAML) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityProviderSAML) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


